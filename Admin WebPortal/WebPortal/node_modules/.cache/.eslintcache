[{"C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\index.js":"1","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\reportWebVitals.js":"2","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\App.js":"3","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Pages\\Home.js":"4","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Pages\\Auth.js":"5","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Student\\Pages\\Student.js":"6","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Student\\Pages\\ViewStudent.js":"7","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Teacher\\Pages\\Teacher.js":"8","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Subject\\Pages\\Subject.js":"9","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\shared\\Components\\NavigationElements\\MainNavbar.js":"10","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\shared\\Components\\studentsArray.js":"11","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\shared\\backend.js":"12","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\shared\\Components\\teacherArray.js":"13","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\shared\\Components\\subjectsArray.js":"14","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Components\\AuthForm.js":"15","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Student\\Components\\AddStudent.js":"16","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Student\\Components\\StudentList.js":"17","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Student\\Components\\UpdateStudent.js":"18","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Teacher\\Components\\AddTeacher.js":"19","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Teacher\\Components\\TeacherList.js":"20","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Subject\\Components\\AddSubject.js":"21","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Subject\\Components\\SubjectList.js":"22","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Subject\\Components\\SubjectListItems.js":"23","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Subject\\Components\\AddSubjectForm.js":"24","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Teacher\\Components\\AddTeacherForm.js":"25","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Teacher\\Components\\TeacherListItems.js":"26","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Student\\Components\\StudentListItems.js":"27","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Student\\Components\\AddStudentForm.js":"28","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Subject\\Components\\EditSubTeacher.js":"29","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Subject\\Components\\AssignTeacher.js":"30","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Teacher\\Pages\\ViewTeacher.js":"31","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Teacher\\Components\\DeleteTeacher.js":"32","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Student\\Components\\DeleteStudent.js":"33","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Teacher\\Components\\UpdateTeacher.js":"34"},{"size":600,"mtime":1633345873251,"results":"35","hashOfConfig":"36"},{"size":362,"mtime":1633345873179,"results":"37","hashOfConfig":"36"},{"size":2366,"mtime":1633345873403,"results":"38","hashOfConfig":"36"},{"size":3118,"mtime":1633345874718,"results":"39","hashOfConfig":"36"},{"size":3685,"mtime":1633345874690,"results":"40","hashOfConfig":"36"},{"size":2526,"mtime":1633345874076,"results":"41","hashOfConfig":"36"},{"size":3598,"mtime":1633345874108,"results":"42","hashOfConfig":"36"},{"size":2417,"mtime":1633345875001,"results":"43","hashOfConfig":"36"},{"size":2555,"mtime":1633345873729,"results":"44","hashOfConfig":"36"},{"size":1339,"mtime":1633345874308,"results":"45","hashOfConfig":"36"},{"size":549,"mtime":1633345874231,"results":"46","hashOfConfig":"36"},{"size":816,"mtime":1633345874142,"results":"47","hashOfConfig":"36"},{"size":438,"mtime":1633345874264,"results":"48","hashOfConfig":"36"},{"size":304,"mtime":1633345874192,"results":"49","hashOfConfig":"36"},{"size":8962,"mtime":1633345874646,"results":"50","hashOfConfig":"36"},{"size":2576,"mtime":1633345152543,"results":"51","hashOfConfig":"36"},{"size":1552,"mtime":1633345873910,"results":"52","hashOfConfig":"36"},{"size":7524,"mtime":1633345874026,"results":"53","hashOfConfig":"36"},{"size":2523,"mtime":1633345874893,"results":"54","hashOfConfig":"36"},{"size":1716,"mtime":1633345874812,"results":"55","hashOfConfig":"36"},{"size":2488,"mtime":1633345873474,"results":"56","hashOfConfig":"36"},{"size":1461,"mtime":1633345873632,"results":"57","hashOfConfig":"36"},{"size":4051,"mtime":1633345873601,"results":"58","hashOfConfig":"36"},{"size":4357,"mtime":1633345873573,"results":"59","hashOfConfig":"36"},{"size":5621,"mtime":1633345874783,"results":"60","hashOfConfig":"36"},{"size":3859,"mtime":1633345874862,"results":"61","hashOfConfig":"36"},{"size":3537,"mtime":1633345873813,"results":"62","hashOfConfig":"36"},{"size":6978,"mtime":1633345873988,"results":"63","hashOfConfig":"36"},{"size":5124,"mtime":1633345873533,"results":"64","hashOfConfig":"36"},{"size":5097,"mtime":1633345873673,"results":"65","hashOfConfig":"36"},{"size":3553,"mtime":1633345874969,"results":"66","hashOfConfig":"36"},{"size":2407,"mtime":1633345874931,"results":"67","hashOfConfig":"36"},{"size":2456,"mtime":1633345873859,"results":"68","hashOfConfig":"36"},{"size":6967,"mtime":1633345874833,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1njthtu",{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},"C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\index.js",[],"C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\reportWebVitals.js",[],"C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\App.js",["159"],"\nimport './App.css';\nimport { createTheme , ThemeProvider} from \"@material-ui/core\";\nimport {  Route, Switch, useLocation } from 'react-router-dom';\nimport Auth from \"./Pages/Auth\";\nimport Home from \"./Pages/Home\";\nimport Student from \"./Student/Pages/Student\";\nimport MainNavbar from './shared/Components/NavigationElements/MainNavbar';\nimport ViewStudent from './Student/Pages/ViewStudent';\nimport Teacher from './Teacher/Pages/Teacher';\nimport Subject from './Subject/Pages/Subject';\n\nconst theme = createTheme ({\n\n  palette: {\n    primary: {\n      // main: \"#583c87\",\n      // main: \"#2a0134\",\n      main: \"#B8A4C7\", //light purple\n      // main: \"#2E1B4B\", //dark purple\n\n      // main: \"#482880\",\n    \n      // light: \"#7986cb\",\n      contrastText: \"#fff\"\n    },\n    secondary: {\n      main: \"#ec407a\",\n    }\n  },\n  typography: {\n  \n    fontFamily: \"Montserrat, sans-serif\",\n     button: {\n      fontFamily: \"Montserrat, sans-serif\", \n      textTransform: 'none',\n      fontWeight:\"bold\", \n      color: \"white\"\n    },\n    h3: {\n      fontSize: \"3rem\",\n    },\n    h4:{\n      fontSize: \"1.7rem\"\n    },\n    h5: {\n      fontSize: \"1.5rem\",\n    },\n    h6: {\n      fontSize: \"1.1rem\",\n      fontWeight: \"bold\",\n    },\n    body1:{\n      fontSize: \"1rem\",\n    }\n  },\n \n  overrides: {\n    MuiInputBase: {\n      input: {\n       color: \"white\", \n       fontSize: \"0.9rem\" \n       \n      }, \n     \n    },\n    MuiFormLabel: {\n      root: {\n       color: \"#dacfed\", \n       fontSize:\"1rem\", \n       \"& .Mui-disabled\": {\n        color: \"rgba(230, 230, 230, 0.5)\"\n      }\n       \n      }\n      \n      \n    } , \n    MuiButton:{\n      label:{\n        color: \"white\", \n        \n      }\n    } ,\n    MuiFormHelperText:{\n      root:{\n        color:\"red\"\n      }\n    }\n  \n  }\n})\nfunction App() {\n  let location = useLocation();\n  return (\n    <ThemeProvider theme={theme}>\n    <div className=\"App\">\n     \n      <Switch>\n        <Route exact path=\"/\" component={Auth}></Route>\n        <Route exact path=\"/home\" component={Home}></Route>\n        <Route exact path=\"/student\" component={Student}></Route>\n\n           <Route exact path=\"/teacher\" component={Teacher}></Route>\n           <Route exact path=\"/subject\" component={Subject}></Route>\n        \n      </Switch>\n    \n     {location.pathname !== \"/\" && <MainNavbar/> }\n\n    </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Pages\\Home.js",["160"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { IoIosPeople } from \"react-icons/io\";\r\nimport { GiTeacher } from \"react-icons/gi\";\r\nimport { ImBooks } from \"react-icons/im\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  btn: {\r\n    width: \"12rem\",\r\n    height: \"12rem\",\r\n     margin: \"3rem\",\r\n display: \"inline-block\",\r\n  },\r\n  buttonLabels: {\r\n    color: \"#2E1B4B\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  hero: {\r\n    height: \"91.5vh\",\r\n    marginTop: 0,\r\n    backgroundColor: \"#d3d3d3\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"center\",\r\n    backgroundSize: \"cover\",\r\n    display: \"flex\",\r\n    minHeight: \"100%\",\r\n    position: \"relative\",\r\n  },\r\n  paperStyle :{\r\n    width: \"60%\",\r\n    padding: \"80px 0px\",\r\n    // margin: \"120px auto\",\r\n    backgroundColor: \"#2E1B4B\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n        margin: \"40px auto\",\r\n        width:\"auto\", \r\n        padding:\"0px 0px\"\r\n      },\r\n      [theme.breakpoints.up(\"md\")]: {\r\n        margin: \"120px auto\",\r\n      },\r\n  }\r\n}));\r\nexport default function Home() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Toolbar />\r\n      <div className={classes.hero}>\r\n        <Paper elevation={10} className = {classes.paperStyle}>\r\n          <div style={{ alignContent: \"center\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.btn}\r\n              component={Link}\r\n              to=\"/student\"\r\n              startIcon={\r\n                <IoIosPeople style={{ color: \"#2E1B4B\", fontSize: \"5rem\" , marginTop:\"32px\" }} />\r\n              }\r\n            >\r\n              <Typography variant=\"h6\" className={classes.buttonLabels}>\r\n                Students\r\n              </Typography>\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.btn}\r\n              component={Link}\r\n              to=\"/teacher\"\r\n              startIcon={\r\n                <GiTeacher style={{ color: \"#2E1B4B\", fontSize: \"5rem\", marginTop:\"32px\" }} />\r\n              }\r\n            >\r\n              <Typography variant=\"h6\" className={classes.buttonLabels}>\r\n                Teachers\r\n              </Typography>\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.btn}\r\n              component={Link}\r\n              to=\"/subject\"\r\n              startIcon={\r\n                <ImBooks style={{ color: \"#2E1B4B\", fontSize: \"5rem\" , marginTop:\"32px\"}} />\r\n              }\r\n            >\r\n              <Typography variant=\"h6\" className={classes.buttonLabels}>\r\n                Subjects\r\n              </Typography>\r\n            </Button>\r\n          </div>\r\n        </Paper>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Pages\\Auth.js",[],"C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Student\\Pages\\Student.js",["161","162"],"import React, { useState, useEffect } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport AddStudent from \"../Components/AddStudent\";\r\nimport StudentList from \"../Components/StudentList\";\r\nimport students from \"../../shared/Components/studentsArray\";\r\n//firebase\r\nimport firebase from '../../shared/backend'\r\nimport { object } from \"yup/lib/locale\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n    overflowY: \"auto\",\r\n    backgroundColor: \"#d3d3d3\",\r\n  },\r\n  paper: {\r\n    padding: \"20px 20px\",\r\n    backgroundColor: \"#2E1B4B\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      margin: theme.spacing(9, 1),\r\n\r\n      width: \"auto\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      margin: theme.spacing(15, 10),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  button: {\r\n    float: \"right\",\r\n    marginBottom: 15,\r\n  },\r\n  collapse: {\r\n    width: \"100%\",\r\n  },\r\n\r\n}));\r\n\r\nexport default function Student() {\r\n\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [student, setStudents] = useState([]);\r\n  useEffect(() => {\r\n    firebase.database().ref('Student/').on('value', (snapshot) => {\r\n      setStudents(snapshot.val())\r\n      })\r\n  }, [])\r\n\r\n  const handleOpenDialog = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleCloseDialog = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        <Container maxWidth=\"lg\" component=\"main\">\r\n          <Paper elevation={5} className={classes.paper}>\r\n            <Button\r\n              variant=\"contained\"\r\n              style={{ backgroundColor: \"#ec407a\", color: \"fff\" }}\r\n              onClick={() => {\r\n                handleOpenDialog();\r\n              }}\r\n              className={classes.button}\r\n              startIcon={<AddIcon />}\r\n            >\r\n              Add Student\r\n            </Button>\r\n\r\n            {open && (\r\n              <AddStudent\r\n                open={open}\r\n                handleCloseDialog={handleCloseDialog}\r\n                setOpen={setOpen}\r\n                students={student}\r\n              />\r\n            )}\r\n\r\n            {student && <StudentList\r\n              items={student}\r\n              setStudents={setStudents}\r\n\r\n            />}\r\n          </Paper>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Student\\Pages\\ViewStudent.js",["163","164"],"import React, { useState, useEffect } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { BiEdit } from \"react-icons/bi\";\r\nimport UpdateStudent from \"../Components/UpdateStudent\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  GridStyle: {\r\n    margin: \" 0px 45px 0px 23px\",\r\n  },\r\n  root: {\r\n    height: \"100vh\",\r\n    overflowY: \"auto\",\r\n    backgroundColor: \"#d3d3d3\",\r\n  },\r\n  paperStyle: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n    backgroundColor: \"#2E1B4B\",\r\n    margin: \"80px auto\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      paddingBottom: \"50px\",\r\n    },\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  InterviewFields: {\r\n    marginTop: 7,\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(1),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  submit: {\r\n    textAlign: \"center\",\r\n    backgroundColor:\"#2E1B4B\",\r\n    marginTop: 10,\r\n  },\r\n  mainHeadTypo: {\r\n    color: theme.palette.primary.main,\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nconst ViewStudent = (props) => {\r\n  const [disableField, setDisableField] = useState(true);\r\n\r\n  const EnableFieldsHandler = () => {\r\n    setDisableField(false);\r\n  };\r\n  const DisableFieldsHandler = () => {\r\n    setDisableField(true);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n   <>\r\n      <Dialog open={props.open} fullWidth maxWidth=\"sm\" >\r\n        <DialogTitle disableTypography style={{   backgroundColor:\"#2E1B4B\"}}>\r\n          <Typography variant=\"h4\" align=\"center\" className={classes.mainHeadTypo} >\r\n           Edit Student\r\n          </Typography>\r\n\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <ListAltIcon />\r\n            </Avatar>\r\n          </div>\r\n        </DialogTitle>\r\n        <DialogContent dividers style={{   backgroundColor:\"#2E1B4B\"}}>\r\n          <div className={classes.demo}>\r\n          <UpdateStudent\r\n            stdId={props.stdId}\r\n            disableField={disableField}\r\n            DisableFieldsHandler={DisableFieldsHandler}\r\n            students = {props.students}\r\n            setStudents = {props.setStudents}\r\n          />\r\n          </div>\r\n          <Grid className={classes.submit}>\r\n            {disableField && (\r\n              <Button\r\n                onClick={EnableFieldsHandler}\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                size=\"medium\"\r\n                startIcon={<BiEdit style={{ marginLeft: 6 }} />}\r\n              >\r\n                Edit Details\r\n              </Button>\r\n            )}\r\n        \r\n          </Grid>\r\n        </DialogContent>\r\n       \r\n        <DialogActions style={{   backgroundColor:\"#2E1B4B\"}}>\r\n          <Button autoFocus onClick={props.handleCloseDialog} color=\"primary\">\r\n            CANCEL\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n  </>\r\n  );\r\n};\r\n\r\nexport default ViewStudent;\r\n","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Teacher\\Pages\\Teacher.js",[],"C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Subject\\Pages\\Subject.js",["165","166"],"import React, { useState, useEffect } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport subjects from \"../../shared/Components/subjectsArray\";\r\nimport AddSubject from \"../Components/AddSubject\";\r\nimport SubjectList from \"../Components/SubjectList\";\r\nimport firebase from '../../shared/backend'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n    overflowY: \"auto\",\r\n    backgroundColor: \"#d3d3d3\",\r\n  },\r\n  paper: {\r\n    padding: \"20px 20px\",\r\n    backgroundColor: \"#2E1B4B\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      margin: theme.spacing(9, 1),\r\n\r\n      width: \"auto\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      margin: theme.spacing(15, 10),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  button: {\r\n    float: \"right\",\r\n    marginBottom: 15,\r\n  },\r\n  collapse: {\r\n    width: \"100%\",\r\n  },\r\n\r\n}));\r\n\r\nexport default function Subject() {\r\n\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [subject, setSubjects] = useState([]);\r\n\r\n  useEffect(() => {\r\n    firebase.database().ref('Subject/').on('value', (snapshot) => {\r\n      if (snapshot.val() != undefined && snapshot.val() != null) {\r\n        setSubjects(snapshot.val())\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  const handleOpenDialog = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleCloseDialog = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        <Container maxWidth=\"lg\" component=\"main\">\r\n          <Paper elevation={5} className={classes.paper}>\r\n            <Button\r\n              variant=\"contained\"\r\n              style={{ backgroundColor: \"#ec407a\", color: \"fff\" }}\r\n              onClick={() => {\r\n                handleOpenDialog();\r\n              }}\r\n              className={classes.button}\r\n              startIcon={<AddIcon />}\r\n            >\r\n              Add Subject\r\n            </Button>\r\n\r\n            {open && (\r\n              <AddSubject\r\n                open={open}\r\n                handleCloseDialog={handleCloseDialog}\r\n                setOpen={setOpen}\r\n                subjects={subject}\r\n              />\r\n            )}\r\n\r\n            {subject && <SubjectList\r\n              items={subject}\r\n              setSubjects={setSubjects}\r\n\r\n            />}\r\n          </Paper>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\shared\\Components\\NavigationElements\\MainNavbar.js",["167"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography, AppBar } from \"@material-ui/core\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  navbar: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  MainLogo: {\r\n    flexGrow: 1,\r\n    color: \"#fff\",\r\n    textAlign: \"left\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  button: {\r\n    margin: \"auto 6px\",\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n}));\r\nexport default function MainNavbar() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const logout = () => {\r\n        history.push(\"/\");\r\n      };\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.navbar}>\r\n      <Toolbar>\r\n        <Typography variant=\"h4\" className={classes.MainLogo}>\r\n          Admin Portal\r\n        </Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          style={{ backgroundColor: \"#2E1B4B\", color: \"#FFFFFF\" }}\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          onClick={logout}\r\n          size=\"large\"\r\n        >\r\n          LogOut\r\n        </Button>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\shared\\Components\\studentsArray.js",[],"C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\shared\\backend.js",[],"C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\shared\\Components\\teacherArray.js",[],"C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\shared\\Components\\subjectsArray.js",[],"C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Components\\AuthForm.js",["168","169","170","171","172","173","174","175"],"import React, {useState} from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  input: {\r\n    color: \"white\",\r\n  },\r\n\r\n  submit: {\r\n    margin: \"10px 0px\",\r\n  },\r\n  error:{\r\n    color: \"red\"\r\n  }\r\n}));\r\n\r\nexport default function AuthForm(props) {\r\n  const classes = useStyles();\r\n  const validationSchema = yup.object().shape({\r\n    email: yup.string()\r\n        .email(\"Please enter valid email\")\r\n        .required(\"Email is required\"),\r\n    password: yup.string()\r\n        .min(6, \"Password must be atleast 6 characters long\")\r\n        .required(\"Password is required\"),\r\n});\r\n\r\n   const [email, setEmail] = useState('');\r\n   const [password, setPassword] = useState('');\r\n   const [loggedIn, setLoggedIn] = useState(false);\r\n   const [error, setError] = useState(false);\r\n \r\n  const onSubmitHandler = (values) => {\r\n    console.log(values.email);\r\n    console.log(values.password);\r\n    if (values.email === \"admin1@gmail.com\" && values.password === \"admin1\")\r\n    {\r\n      setError(false);\r\n      setLoggedIn(true);\r\n    }\r\n    else\r\n    {\r\n     setError(true);\r\n    }\r\n  };\r\n\r\n  const onChange = (e)=>{\r\n     e.target.name == \"email\"? setEmail(e.target.value) : setPassword(e.target.value)\r\n  }\r\n\r\n  if(loggedIn)\r\n  {\r\n    return <Redirect to=\"/home\"/>\r\n  }\r\n  if (props.isTeacher) {\r\n    return (\r\n      <Formik\r\n      initialValues={props.initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={onSubmitHandler}\r\n  >\r\n\r\n      {(props) => (\r\n          <Form>\r\n              <Field\r\n                  as={TextField}\r\n                  variant=\"standard\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  size=\"medium\"\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  helperText={\r\n                      <ErrorMessage\r\n                          name=\"email\"\r\n                          style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                      />\r\n                  }\r\n              />\r\n\r\n              <Field\r\n                  as={TextField}\r\n                  variant=\"standard\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  size=\"medium\"\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  helperText={\r\n                      <ErrorMessage\r\n                          name=\"password\"\r\n                          style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                      />\r\n                  }\r\n              />\r\n              {error ? (\r\n                  <Typography className=\"MuiFormHelperText-root\" align=\"center\" variant=\"body2\" className={classes.error}>Username or Password is incorrect!</Typography>\r\n              ) : \" \"}\r\n              <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  disabled={!(props.isValid || props.isSubmitting)}\r\n                  className={classes.submit}\r\n              >\r\n                  Sign In\r\n              </Button>\r\n\r\n          </Form>\r\n      )}\r\n  </Formik>\r\n  );\r\n              }\r\n  else\r\n  {\r\n    return (\r\n      <Formik\r\n      initialValues={props.initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={onSubmitHandler}\r\n  >\r\n\r\n      {(props) => (\r\n          <Form>\r\n              <Field\r\n                  as={TextField}\r\n                  variant=\"standard\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  size=\"medium\"\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  helperText={\r\n                      <ErrorMessage\r\n                          name=\"email\"\r\n                          style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                      />\r\n                  }\r\n              />\r\n\r\n              <Field\r\n                  as={TextField}\r\n                  variant=\"standard\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  size=\"medium\"\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  helperText={\r\n                      <ErrorMessage\r\n                          name=\"password\"\r\n                          style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                      />\r\n                  }\r\n              />\r\n              {error ? (\r\n                  <Typography className=\"MuiFormHelperText-root\" align=\"center\" variant=\"body2\" className = {classes.error}>Username or Password is incorrect!</Typography>\r\n              ) : \" \"}\r\n              <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  disabled={!(props.isValid || props.isSubmitting)}\r\n                  className={classes.submit}\r\n              >\r\n                  Sign In\r\n              </Button>\r\n\r\n          </Form>\r\n      )}\r\n  </Formik>\r\n  );\r\n  }\r\n}\r\n\r\n  //     <form className={classes.form} noValidate autoComplete=\"off\" onSubmit={onSubmitHandler}>\r\n  //       <Field\r\n  //         as = {TextFields}\r\n  //         variant=\"standard\"\r\n  //         margin=\"normal\"\r\n  //         id=\"standard-size-small\"\r\n  //         size=\"small\"\r\n  //         required\r\n  //         fullWidth\r\n  //         id=\"TeacherEmail\"\r\n  //         label=\"Teacher ID\"\r\n  //         name=\"email\"\r\n  //         autoComplete=\"email\"\r\n  //         autoFocus\r\n  //         value = {email}\r\n  //         onChange = {onChange}\r\n         \r\n  //       />\r\n\r\n  //       <TextField\r\n  //         variant=\"standard\"\r\n  //         margin=\"normal\"\r\n  //         id=\"standard-si\r\n  //         ze-small\"\r\n  //         size=\"small\"\r\n  //         required\r\n  //         fullWidth\r\n  //         name=\"password\"\r\n  //         label=\"Password\"\r\n  //         type=\"password\"\r\n  //         id=\"TeacherPass\"\r\n  //         autoComplete=\"current-password\"\r\n  //         value = {password}\r\n  //         onChange = {onChange}\r\n         \r\n  //       />\r\n\r\n  //       <Button\r\n  //         type=\"submit\"\r\n  //         fullWidth\r\n  //         variant=\"contained\"\r\n  //         color=\"secondary\"\r\n  //         className={classes.submit}\r\n  //       >\r\n  //         Sign In\r\n  //       </Button>\r\n  //       {error && <Typography variant=\"body2\" className={classes.error}>Username or Password is incorrect!</Typography>}\r\n  //       <Grid container>\r\n  //         <Grid item xs>\r\n  //           <Link href=\"\" variant=\"body2\">\r\n  //             Forgot password?\r\n  //           </Link>\r\n  //         </Grid>\r\n  //       </Grid>\r\n  //     </form>\r\n  //   );\r\n  // } else {\r\n  //   return (\r\n  //     <form className={classes.form} noValidate autoComplete=\"off\" onSubmit={onSubmitHandler}>\r\n  //       <TextField\r\n  //         variant=\"standard\"\r\n  //         margin=\"normal\"\r\n  //         id=\"standard-size-small\"\r\n  //         size=\"small\"\r\n  //         required\r\n  //         fullWidth\r\n  //         id=\"AdminEmail\"\r\n  //         label=\"Admin ID\"\r\n  //         name=\"email\"\r\n  //         autoComplete=\"email\"\r\n  //         autoFocus\r\n  //         value={email}\r\n  //         onChange = {onChange}\r\n  //       />\r\n\r\n  //       <TextField\r\n  //         variant=\"standard\"\r\n  //         margin=\"normal\"\r\n  //         id=\"standard-size-small\"\r\n  //         size=\"small\"\r\n  //         required\r\n  //         fullWidth\r\n  //         name=\"password\"\r\n  //         label=\"Password\"\r\n  //         type=\"password\"\r\n  //         id=\"AdminPass\"\r\n  //         autoComplete=\"current-password\"\r\n  //         value={password}\r\n  //         onChange = {onChange}\r\n  //       />\r\n\r\n  //       <Button\r\n  //         type=\"submit\"\r\n  //         fullWidth\r\n  //         variant=\"contained\"\r\n  //         color=\"secondary\"\r\n  //         className={classes.submit}\r\n  //       >\r\n  //         Sign In\r\n  //       </Button>\r\n  //       {error && <Typography variant=\"body2\"  className={classes.error}>Username or Password is incorrect!</Typography>}\r\n  //     </form>\r\n","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Student\\Components\\AddStudent.js",["176"],"import React, { Fragment} from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport AddStudentForm from \"./AddStudentForm\";\r\nimport {BsFillPeopleFill} from \"react-icons/bs\";\r\n\r\n//import {BsPeopleCircle} from \"react-icons/bs\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(2),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n \r\n  },\r\n  mainHeadTypo: {\r\n    color:theme.palette.primary.main, \r\n    fontWeight:\"bold\"\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n}));\r\n\r\nconst AddStudent = (props) => {\r\n  const paperStyle = {\r\n    width: 400,\r\n    padding: 20,\r\n    margin: \"100px auto\",\r\n\r\n  };\r\n  const avatarStyle = {\r\n    backgroundColor: \"primary\",\r\n  };\r\n  const classes = useStyles();\r\n  const initialValues = {\r\n    name: \"\",\r\n    program: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    //semester: \"\",\r\n    //profileLink:\"\"\r\n  \r\n  };\r\n  \r\n \r\n  return (\r\n    <Fragment>\r\n      <Dialog open={props.open} fullWidth maxWidth=\"sm\" >\r\n        <DialogTitle disableTypography style={{   backgroundColor:\"#2E1B4B\"}}>\r\n          <Typography variant=\"h4\" align=\"center\" className={classes.mainHeadTypo} >\r\n           Add Student\r\n          </Typography>\r\n\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <BsFillPeopleFill style={avatarStyle} />\r\n            </Avatar>\r\n          </div>\r\n        </DialogTitle>\r\n        <DialogContent dividers style={{   backgroundColor:\"#2E1B4B\"}}>\r\n          <div className={classes.demo}>\r\n            <AddStudentForm\r\n              students = {props.students}\r\n              setOpen={props.setOpen}\r\n              initialValues = {initialValues}\r\n            />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions style={{   backgroundColor:\"#2E1B4B\"}}>\r\n          <Button autoFocus onClick={props.handleCloseDialog} color=\"primary\">\r\n            CANCEL\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AddStudent;\r\n","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Student\\Components\\StudentList.js",[],"C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Student\\Components\\UpdateStudent.js",["177","178","179","180"],"import React, { useEffect, useState } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { BiSave } from \"react-icons/bi\";\r\nimport students from \"../../shared/Components/studentsArray\";\r\n//import firebase \r\nimport firebase from '../../shared/backend';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  GridStyle: {\r\n    margin: \" 0px 45px 0px 23px\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n  submit: {\r\n    textAlign: \"center\",\r\n\r\n    marginTop: 10,\r\n  },\r\n}));\r\n\r\nconst validationSchema = yup.object().shape({\r\n  name: yup\r\n    .string()\r\n    .required(\"This field is required\")\r\n    .matches(/^[A-Za-z ]*$/, \"Please enter valid name (Alphabets Only)\")\r\n    .min(3, \"First Name must be atleast 3 characters\"),\r\n\r\n  program: yup\r\n    .string()\r\n    .required(\"This field is required\")\r\n    .matches(/^[A-Za-z ]*$/, \"Please enter Program name (Alphabets Only)\")\r\n    .min(3, \"Last Name must be atleast 3 characters\"),\r\n\r\n  email: yup\r\n    .string()\r\n    .required(\"This field is required\")\r\n    .email(\"Please enter valid email\"),\r\n\r\n  password: yup\r\n    .string()\r\n    .required(\"This field is required\")\r\n    .min(6, \"Password must be atleast 6 characters long\"),\r\n\r\n  semester: yup.string().required(\"This field is required\"),\r\n\r\n  profileLink: yup.string().required(\"This field is required\"),\r\n});\r\n\r\nconst UpdateStudent = (props) => {\r\n  const studentId = props.stdId;\r\n  const classes = useStyles();\r\n\r\n  const [arr, setArr] = useState(props.students);\r\n  // const [reRender, setReRender] = useState(false);\r\n\r\n  // useEffect(()=>{\r\n  //  console.log(\"hello\")\r\n  // }, [reRender])\r\n\r\n  useEffect(() => {\r\n\r\n  }, []);\r\n  const [user, setUser] = useState(props.students[studentId])\r\n  const initialValues = {\r\n    name: props.students[studentId].name,\r\n    program: props.students[studentId].program,\r\n    email: props.students[studentId].email,\r\n    password: props.students[studentId].password,\r\n    semester: props.students[studentId].semester,\r\n    profileLink: props.students[studentId].profileLink,\r\n  };\r\n\r\n  const onSubmitHandler = (values) => {\r\n    try {\r\n      firebase.auth().signInWithEmailAndPassword(String(user.email), String(user.password)).then(\r\n        function (userCredential) {\r\n          userCredential.user.updateEmail(values.email);\r\n        }).then(res => {\r\n          firebase.database().ref('Student/' + user.id+'/').update({ email: values.email })\r\n        })\r\n        \r\n    } catch (err) {\r\n      alert('Please retry')\r\n    }\r\n    props.DisableFieldsHandler();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={onSubmitHandler}\r\n      >\r\n        {(fProps) => (\r\n          <Form>\r\n            <Grid container spacing={2}>\r\n              <Grid item={true} xs={12} sm={6}>\r\n                <Field\r\n                  as={TextField}\r\n                  inputProps={{ readOnly: true }}\r\n                  variant=\"standard\"\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  id=\"name\"\r\n                  label=\"Name\"\r\n                  name=\"name\"\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"name\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item={true} xs={12} sm={6}>\r\n                <Field\r\n                  as={TextField}\r\n                  inputProps={{ readOnly: true }}\r\n                  id=\"program\"\r\n                  multiline\r\n                  variant=\"standard\"\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  name=\"program\"\r\n                  label=\"Program\"\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"program\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item={true} xs={12} sm={6}>\r\n                <Field\r\n                  as={TextField}\r\n                  inputProps={{ readOnly: props.disableField }}\r\n                  variant=\"standard\"\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"email\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item={true} xs={12} sm={6}>\r\n                <Field\r\n                  as={TextField}\r\n                  inputProps={{ readOnly: true }}\r\n                  id=\"password\"\r\n                  multiline\r\n                  variant=\"standard\"\r\n                  margin=\"normal\"\r\n\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"password\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item={true} xs={12} sm={6}>\r\n                <Field\r\n                  as={TextField}\r\n                  variant=\"standard\"\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  id=\"semester\"\r\n                  label=\"Semester\"\r\n                  name=\"semester\"\r\n                  inputProps={{ readOnly: true }}\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"semester\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item={true} xs={12} sm={6}>\r\n                <Field\r\n                  as={TextField}\r\n                  id=\"profileLink\"\r\n                  multiline\r\n                  variant=\"standard\"\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  name=\"profileLink\"\r\n                  inputProps={{ readOnly: true }}\r\n                  label=\"Profile Link\"\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"profileLink\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid className={classes.submit}>\r\n              {!props.disableField && (\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  size=\"medium\"\r\n                  disabled={!(fProps.isValid || fProps.isSubmitting)}\r\n                  startIcon={<BiSave style={{ marginLeft: 6 }} />}\r\n                >\r\n                  Save Changes\r\n                </Button>\r\n              )}\r\n            </Grid>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\nexport default UpdateStudent;\r\n","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Teacher\\Components\\AddTeacher.js",["181"],"import React, { Fragment} from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport {FaChalkboardTeacher} from \"react-icons/fa\";\r\nimport AddTeacherForm from \"./AddTeacherForm\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(2),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n \r\n  },\r\n  mainHeadTypo: {\r\n    color:theme.palette.primary.main, \r\n    fontWeight:\"bold\"\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n}));\r\n\r\nconst AddTeacher = (props) => {\r\n  const paperStyle = {\r\n    width: 400,\r\n    padding: 20,\r\n    margin: \"100px auto\",\r\n\r\n  };\r\n  const avatarStyle = {\r\n    backgroundColor: \"primary\",\r\n  };\r\n  const classes = useStyles();\r\n  const initialValues = {\r\n    name: \"\",\r\n    qualification: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    \r\n  \r\n  };\r\n  \r\n \r\n  return (\r\n    <Fragment>\r\n      <Dialog open={props.open} fullWidth maxWidth=\"sm\" >\r\n        <DialogTitle disableTypography style={{   backgroundColor:\"#2E1B4B\"}}>\r\n          <Typography variant=\"h4\" align=\"center\" className={classes.mainHeadTypo} >\r\n           Add Teacher\r\n          </Typography>\r\n\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <FaChalkboardTeacher style={avatarStyle} />\r\n            </Avatar>\r\n          </div>\r\n        </DialogTitle>\r\n        <DialogContent dividers style={{   backgroundColor:\"#2E1B4B\"}}>\r\n          <div className={classes.demo}>\r\n            <AddTeacherForm\r\n              teachers = {props.teacher}\r\n              setOpen={props.setOpen}\r\n              initialValues = {initialValues}\r\n         \r\n            \r\n            />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions style={{   backgroundColor:\"#2E1B4B\"}}>\r\n          <Button autoFocus onClick={props.handleCloseDialog} color=\"primary\">\r\n            CANCEL\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AddTeacher;\r\n","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Teacher\\Components\\TeacherList.js",["182","183"],"import { Paper, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport TeacherListItems from \"./TeacherListItems\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    margin: \"30px auto\",\r\n    padding: \"20px 50px\",\r\n  },\r\n}));\r\n\r\nconst TeacherList = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const heading = {\r\n    padding: \"13px\",\r\n    fontSize: \"1.2rem\",\r\n    fontWeight: \"bold\"\r\n  };\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <>\r\n        <AppBar position=\"static\" style={{ backgroundColor: \"#ec407a\" }}>\r\n          <Typography style={heading}>TEACHERS</Typography>\r\n        </AppBar>\r\n        <Container maxWidth=\"md\" component=\"main\">\r\n          <Typography\r\n            variant=\"h4\"\r\n            color=\"primary\"\r\n            align=\"center\"\r\n            style={{ padding: \"20px 0px\" }}\r\n          >\r\n            {\"No teachers are added!\"}\r\n          </Typography>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\" style={{ backgroundColor: \"#ec407a\" }}>\r\n        <Typography style={heading} variant=\"h6\">TEACHERS</Typography>\r\n      </AppBar>\r\n      {Object.values(props.items).map((tch) => (\r\n        <TeacherListItems\r\n          key={tch.id}\r\n          id={tch.id}\r\n          name={tch.name}\r\n          email={tch.email}\r\n          password={tch.password}\r\n          qualification={tch.qualification}\r\n          teachers={props.items}\r\n          setTeacher={props.setTeacher}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\nexport default TeacherList;\r\n","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Subject\\Components\\AddSubject.js",["184"],"import React, { Fragment} from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport AddSubjectForm from \"./AddSubjectForm\";\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(2),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n \r\n  },\r\n  mainHeadTypo: {\r\n    color:theme.palette.primary.main, \r\n    fontWeight:\"bold\"\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n}));\r\n\r\nconst AddSubject = (props) => {\r\n  const paperStyle = {\r\n    width: 400,\r\n    padding: 20,\r\n    margin: \"100px auto\",\r\n\r\n  };\r\n  const avatarStyle = {\r\n    backgroundColor: \"primary\",\r\n  };\r\n  const classes = useStyles();\r\n  const initialValues = {\r\n    name: \"\",\r\n    semester: \"\",\r\n    credit: \"\",\r\n\r\n  };\r\n  \r\n \r\n  return (\r\n    <Fragment>\r\n      <Dialog open={props.open} fullWidth maxWidth=\"sm\" >\r\n        <DialogTitle disableTypography style={{   backgroundColor:\"#2E1B4B\"}}>\r\n          <Typography variant=\"h4\" align=\"center\" className={classes.mainHeadTypo} >\r\n           Add Subject\r\n          </Typography>\r\n\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <MenuBookIcon style={avatarStyle} />\r\n            </Avatar>\r\n          </div>\r\n        </DialogTitle>\r\n        <DialogContent dividers style={{   backgroundColor:\"#2E1B4B\"}}>\r\n          <div className={classes.demo}>\r\n            <AddSubjectForm\r\n              subjects = {props.subjects}\r\n              setOpen={props.setOpen}\r\n              initialValues = {initialValues}\r\n         \r\n            \r\n            />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions style={{   backgroundColor:\"#2E1B4B\"}}>\r\n          <Button autoFocus onClick={props.handleCloseDialog} color=\"primary\">\r\n            CANCEL\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AddSubject;\r\n","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Subject\\Components\\SubjectList.js",[],"C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Subject\\Components\\SubjectListItems.js",[],"C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Subject\\Components\\AddSubjectForm.js",["185"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport firebase from '../../shared/backend'\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  Typography: {\r\n    fontFamily: theme.typography.fontFamily,\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  GridStyle: {\r\n    margin: \"0px 22px\",\r\n  },\r\n  error: {\r\n    color: \"red\"\r\n  }\r\n}));\r\n\r\nconst AddSubjectForm = (props) => {\r\n\r\n  const classes = useStyles();\r\n  const validationSchema = yup.object().shape({\r\n    name: yup\r\n      .string()\r\n      .required(\"This field is required\")\r\n      .matches(/^[A-Za-z ]*$/, \"Please enter valid name (Alphabets Only)\")\r\n      .min(3, \"First Name must be atleast 3 characters\"),\r\n\r\n    credit: yup\r\n      .string()\r\n      .required(\"This field is required\"),\r\n\r\n\r\n    semester: yup\r\n      .string()\r\n      .required(\"This field is required\"),\r\n\r\n  });\r\n\r\n\r\n  ;\r\n  const onSubmitHandler = (values) => {\r\n    var a;\r\n    firebase.database().ref('Subject/').once('value', (snapshot) => {\r\n      if (snapshot.val() == undefined && snapshot.val() == null) {\r\n        a = 0\r\n      } else {\r\n        a = Object.values(snapshot.val()).length\r\n      }\r\n    }).then(() => {\r\n      firebase.database().ref('Subject/' + a).set({\r\n        credit: values.credit,\r\n        id: a,\r\n        name: values.name,\r\n        semester: values.semester,\r\n        teacherid: null\r\n      })\r\n    })\r\n    console.log(props.subjects);\r\n    props.setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={props.initialValues}\r\n        onSubmit={onSubmitHandler}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {(fProps) => (\r\n          <Form className={classes.form}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <Field\r\n                  as={TextField}\r\n                  autoComplete=\"name\"\r\n                  name=\"name\"\r\n                  variant=\"standard\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  id=\"name\"\r\n                  label=\"Name\"\r\n                  autoFocus\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"name\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Field\r\n                  as={TextField}\r\n                  variant=\"standard\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  id=\"credit\"\r\n                  label=\"Credit\"\r\n                  name=\"credit\"\r\n                  autoComplete=\"credit\"\r\n\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"credit\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={12}>\r\n                <Field\r\n                  as={TextField}\r\n                  variant=\"standard\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"semester\"\r\n                  label=\"Semester\"\r\n                  id=\"semester\"\r\n                  autoComplete=\"semester\"\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"semester\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes.submit}\r\n                disabled={!(fProps.isValid || fProps.isSubmitting)}\r\n              >\r\n                Add Subject\r\n              </Button>\r\n            </Grid>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddSubjectForm;\r\n","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Teacher\\Components\\AddTeacherForm.js",[],"C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Teacher\\Components\\TeacherListItems.js",["186"],"import React, { useState} from 'react';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Button, Card, Grid } from '@material-ui/core';\r\nimport {Link} from \"react-router-dom\";\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\nimport { IoMdEye } from \"react-icons/io\";\r\nimport DeleteTeacher from './DeleteTeacher';\r\nimport ViewTeacher from '../Pages/ViewTeacher';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    display: \"flex\",\r\n    marginTop: \"15px\",\r\n    padding: \"10px 17px\",\r\n  },\r\n\r\n  ViewButton: {\r\n    height: \"35px\",\r\n    marginTop: \"12px \",\r\n    marginRight: \"10px\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      float: \"right\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginRight: \"0px\",\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      marginRight: \"10px\",\r\n    },\r\n  },\r\n\r\n  header: {\r\n    flexGrow: 1,\r\n  },\r\n    \r\n      accor: {\r\n        padding: \"20px 40px\",\r\n      },\r\n      heading: {\r\n        fontSize: theme.typography.pxToRem(20),\r\n        fontWeight: theme.typography.fontWeightBold,\r\n        color: \"#004777\",\r\n      },\r\n\r\n    }));\r\nconst TeacherListItems = (props) =>{\r\n\r\n    const classes = useStyles();\r\n  \r\n    const [open, setOpen] = useState(false);\r\n  \r\n    const [OpenDeleteDialog, setOpenDeleteDialog] = useState(false);\r\n\r\n    const OpenDeleteDialogHandler = () => {\r\n      setOpenDeleteDialog(true);\r\n    };\r\n\r\n    const handleOpenDialog = () => {\r\n      setOpen(true);\r\n    };\r\n    const handleCloseDialog = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n   \r\n  \r\n\r\n\r\n   \r\nreturn (\r\n  <Card className={classes.card}>\r\n  <Grid container spacing = {5} >\r\n    <Grid item sm={6} lg={7} style={{ flexGrow: 1 }}>\r\n      <div className={classes.header}>\r\n        \r\n        <Typography variant=\"h6\" align=\"justify\" style={{color: \"#2E1B4B\"}}>\r\n        Name: {props.name}\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" align=\"justify\"   style={{ color: \"grey\" }}>\r\n        Qualification: {props.qualification}\r\n        </Typography>\r\n      </div>\r\n    </Grid>\r\n\r\n<Grid item sm={6} lg={5} style={{flexGrow:1}}>\r\n<Button\r\n            variant=\"contained\"\r\n           style={{ backgroundColor: \"#2E1B4B\", color: \"#FFFFFF\" }}\r\n            className={classes.ViewButton}\r\n            startIcon={<IoMdEye style={{ marginLeft: 6 }} />}\r\n            onClick={() => {\r\n                handleOpenDialog();\r\n            }}\r\n          >\r\n           View Details\r\n          </Button>\r\n          {open && (\r\n                        <ViewTeacher\r\n                            open={open}\r\n                            handleCloseDialog={handleCloseDialog}\r\n                            setOpen={setOpen}\r\n                            tchId={props.id}\r\n                            teachers = {props.teachers}\r\n                            setTeacher = {props.setTeacher}\r\n                          \r\n                        />\r\n                    )}\r\n\r\n          <Button\r\n          variant=\"contained\"\r\n          style={{ backgroundColor: \"#2E1B4B\", color: \"#FFFFFF\" }}\r\n          className={classes.ViewButton}\r\n          startIcon={<RiDeleteBin6Line style={{ marginLeft: 6 }} />}\r\n          onClick={() => {\r\n            OpenDeleteDialogHandler();\r\n          }}\r\n          >\r\n           Delete\r\n          </Button>\r\n          </Grid>\r\n          </Grid>\r\n          {OpenDeleteDialog && (\r\n                        <DeleteTeacher\r\n                        OpenDeleteDialog={OpenDeleteDialog}\r\n                        setOpenDeleteDialog={setOpenDeleteDialog}\r\n                            tchId = {props.id}\r\n                            teachers = {props.teachers}\r\n                            setTeacher={props.setTeacher}\r\n                        />\r\n                    )}\r\n</Card>\r\n\r\n\r\n\r\n);\r\n}\r\n\r\nexport default TeacherListItems;","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Student\\Components\\StudentListItems.js",["187"],"import React, { useState } from 'react';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Button, Card, Grid } from '@material-ui/core';\r\nimport { Link } from \"react-router-dom\";\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\nimport { IoMdEye } from \"react-icons/io\";\r\nimport DeleteStudent from './DeleteStudent';\r\nimport ViewStudent from '../Pages/ViewStudent';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    display: \"flex\",\r\n    marginTop: \"15px\",\r\n    padding: \"10px 17px\",\r\n  },\r\n\r\n  ViewButton: {\r\n    height: \"35px\",\r\n    marginTop: \"12px \",\r\n    marginRight: \"10px\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      float: \"right\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginRight: \"0px\",\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      marginRight: \"10px\",\r\n    },\r\n  },\r\n\r\n  header: {\r\n    flexGrow: 1,\r\n  },\r\n\r\n}));\r\nconst StudentListItems = (props) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [OpenDeleteDialog, setOpenDeleteDialog] = useState(false);\r\n\r\n  const OpenDeleteDialogHandler = () => {\r\n    setOpenDeleteDialog(true);\r\n  };\r\n\r\n  const handleOpenDialog = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleCloseDialog = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <Grid container spacing={5} >\r\n        <Grid item sm={6} lg={7} style={{ flexGrow: 1 }}>\r\n          <div className={classes.header}>\r\n\r\n            <Typography variant=\"h6\" align=\"justify\" style={{ color: \"#2E1B4B\" }}>\r\n              Name: {props.name}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" align=\"justify\" style={{ color: \"grey\" }}>\r\n              Program: {props.program}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" align=\"justify\" style={{ color: \"grey\" }}>\r\n              Semester: {props.semester}\r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item sm={6} lg={5} style={{ flexGrow: 1 }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            style={{ backgroundColor: \"#2E1B4B\", color: \"#FFFFFF\" }}\r\n            className={classes.ViewButton}\r\n            startIcon={<IoMdEye style={{ marginLeft: 6 }} />}\r\n            onClick={() => {\r\n              handleOpenDialog();\r\n            }}\r\n          >\r\n            View Details\r\n          </Button>\r\n          {open && (\r\n            <ViewStudent\r\n              open={open}\r\n              handleCloseDialog={handleCloseDialog}\r\n              setOpen={setOpen}\r\n              stdId={props.id}\r\n              students={props.students}\r\n              setStudents={props.setStudents}\r\n\r\n            />\r\n          )}\r\n\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            style={{ backgroundColor: \"#2E1B4B\", color: \"#FFFFFF\" }}\r\n            className={classes.ViewButton}\r\n            startIcon={<RiDeleteBin6Line style={{ marginLeft: 6 }} />}\r\n            onClick={() => {\r\n              OpenDeleteDialogHandler();\r\n            }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      {OpenDeleteDialog && (\r\n        <DeleteStudent\r\n          OpenDeleteDialog={OpenDeleteDialog}\r\n          setOpenDeleteDialog={setOpenDeleteDialog}\r\n          stdId={props.id}\r\n          students={props.students}\r\n          setStudents={props.setStudents}\r\n        />\r\n      )}\r\n    </Card>\r\n\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default StudentListItems;","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Student\\Components\\AddStudentForm.js",[],"C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Subject\\Components\\EditSubTeacher.js",["188"],"import React, { useEffect, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {BsFillPersonCheckFill} from \"react-icons/bs\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { BiEdit } from \"react-icons/bi\";\r\n\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport  firebase from '../../shared/backend';\r\n//import teachers from \"../../shared/Components/teacherArray\";\r\nimport { object } from \"yup\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  GridStyle: {\r\n    margin: \" 0px 45px 0px 23px\",\r\n  },\r\n  FormHelperText: {\r\n    marginLeft: 15,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 550,\r\n  },\r\n  root: {\r\n    height: \"100vh\",\r\n    overflowY: \"auto\",\r\n    backgroundColor: \"#d3d3d3\",\r\n  },\r\n  paperStyle: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n    backgroundColor: \"#2E1B4B\",\r\n    margin: \"80px auto\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      paddingBottom: \"50px\",\r\n    },\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  InterviewFields: {\r\n    marginTop: 7,\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(1),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  submit: {\r\n    textAlign: \"center\",\r\n    backgroundColor: \"#2E1B4B\",\r\n    marginTop: 10,\r\n  },\r\n  mainHeadTypo: {\r\n    color: theme.palette.primary.main,\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 550,\r\n    },\r\n  },\r\n};\r\n\r\nconst EditSubTeacher = (props) => {\r\n  const [teachers,setTeachers] = useState([])\r\n  useEffect(()=>{\r\n    firebase.database().ref('Teacher/').on('value',(snapshot) =>{\r\n        setTeachers(snapshot.val())\r\n    })\r\n  },[])\r\n\r\n  const [assignedTch, setAssignTch] = useState(\r\n    props.subjects[props.subId].teacherid\r\n  );\r\n\r\n  const handleChange = (event) => {\r\n    setAssignTch(event.target.value);\r\n  };\r\n  const doneTeacher = () => {\r\n    props.subjects[props.subId].teacherid = assignedTch;\r\n    props.CloseDeleteDialogHandler();\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={props.OpenDeleteDialog} fullWidth maxWidth=\"sm\">\r\n        <DialogTitle disableTypography style={{ backgroundColor: \"#2E1B4B\" }}>\r\n          <Typography\r\n            variant=\"h4\"\r\n            align=\"center\"\r\n            className={classes.mainHeadTypo}\r\n          >\r\n            Update Teacher\r\n          </Typography>\r\n\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <BsFillPersonCheckFill />\r\n            </Avatar>\r\n          </div>\r\n        </DialogTitle>\r\n        <DialogContent dividers style={{ backgroundColor: \"#2E1B4B\" }}>\r\n          <div className={classes.demo}>\r\n            <FormControl className={classes.formControl}>\r\n              {console.log(\"tecaher: \" + props.subTch)}\r\n              <InputLabel id=\"handle\">Select Teacher for Subject</InputLabel>\r\n              <Select\r\n                labelId=\"handle\"\r\n                id=\"handle\"\r\n                value={assignedTch}\r\n                onChange={handleChange}\r\n                MenuProps={MenuProps}\r\n              >\r\n                {Object.values(teachers).map((tch) => (\r\n                  <MenuItem key={tch.id + 1} value={tch.id + 1}>\r\n                    {\"Teacher: \" +\r\n                      tch.name +\r\n                      \"   |    \" +\r\n                      \"Qualification: \" +\r\n                      tch.qualification}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <Grid className={classes.submit}>\r\n            <Button\r\n              onClick={doneTeacher}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              size=\"medium\"\r\n              startIcon={<BiEdit style={{ marginLeft: 6 }} />}\r\n              disabled={!assignedTch}\r\n            >\r\n              Done\r\n            </Button>\r\n          </Grid>\r\n        </DialogContent>\r\n\r\n        <DialogActions style={{ backgroundColor: \"#2E1B4B\" }}>\r\n          <Button\r\n            autoFocus\r\n            onClick={props.CloseDeleteDialogHandler}\r\n            color=\"primary\"\r\n          >\r\n            CANCEL\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditSubTeacher;\r\n","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Subject\\Components\\AssignTeacher.js",["189"],"import React, { useState, useEffect } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { BsFillPersonCheckFill } from \"react-icons/bs\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { IoCheckmarkDone } from \"react-icons/io5\";\r\n\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport firebase from '../../shared/backend'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  GridStyle: {\r\n    margin: \" 0px 45px 0px 23px\",\r\n  },\r\n  FormHelperText: {\r\n    marginLeft: 15,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 550,\r\n  },\r\n  root: {\r\n    height: \"100vh\",\r\n    overflowY: \"auto\",\r\n    backgroundColor: \"#d3d3d3\",\r\n  },\r\n  paperStyle: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n    backgroundColor: \"#2E1B4B\",\r\n    margin: \"80px auto\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      paddingBottom: \"50px\",\r\n    },\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  InterviewFields: {\r\n    marginTop: 7,\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(1),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  submit: {\r\n    textAlign: \"center\",\r\n    backgroundColor: \"#2E1B4B\",\r\n    marginTop: 10,\r\n  },\r\n  mainHeadTypo: {\r\n    color: theme.palette.primary.main,\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 550,\r\n    },\r\n  },\r\n};\r\n\r\nconst AssignTeacher = (props) => {\r\n  const [teachers, setTeacher] = useState([])\r\n  useEffect(() => {\r\n    firebase.database().ref('Teacher/').on('value', (snapshot) => {\r\n      if (snapshot.val() != undefined && snapshot.val() != null) {\r\n        setTeacher(snapshot.val())\r\n      }\r\n    })\r\n  }, [])\r\n\r\n\r\n  const handleChange = (event) => {\r\n    props.setSubTch(event.target.value);\r\n  };\r\n  const doneTeacher = () => {\r\n    const actualTid = props.subTch.slice(0,-1)\r\n    firebase.database().ref('Subject/'+props.subId).update({teacherid:actualTid})\r\n    //props.subjects[props.subId].teacherid = props.subTch;\r\n    props.handleCloseDialog();\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={props.open} fullWidth maxWidth=\"sm\">\r\n        <DialogTitle disableTypography style={{ backgroundColor: \"#2E1B4B\" }}>\r\n          <Typography\r\n            variant=\"h4\"\r\n            align=\"center\"\r\n            className={classes.mainHeadTypo}\r\n          >\r\n            Assign Teacher\r\n          </Typography>\r\n          {props.subTch && console.log(props.subTch)}\r\n\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <BsFillPersonCheckFill />\r\n            </Avatar>\r\n          </div>\r\n        </DialogTitle>\r\n        <DialogContent dividers style={{ backgroundColor: \"#2E1B4B\" }}>\r\n          <div className={classes.demo}>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"handle\">Select Teacher for Subject</InputLabel>\r\n              <Select\r\n                labelId=\"handle\"\r\n                id=\"handle\"\r\n                value={props.subTch}\r\n                onChange={handleChange}\r\n                MenuProps={MenuProps}\r\n              >\r\n                {Object.values(teachers).map((tch) => (\r\n                  <MenuItem key={tch.id + 1} value={tch.id + 1}>\r\n                    {\"Teacher: \" +\r\n                      tch.name +\r\n                      \"   |    \" +\r\n                      \"Qualification: \" +\r\n                      tch.qualification}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <Grid className={classes.submit}>\r\n            <Button\r\n              onClick={doneTeacher}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              size=\"medium\"\r\n              startIcon={<IoCheckmarkDone style={{ marginLeft: 6 }} />}\r\n              disabled={!props.subTch}\r\n            >\r\n              Done\r\n            </Button>\r\n          </Grid>\r\n        </DialogContent>\r\n\r\n        <DialogActions style={{ backgroundColor: \"#2E1B4B\" }}>\r\n          <Button autoFocus onClick={props.handleCloseDialog} color=\"primary\">\r\n            CANCEL\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AssignTeacher;\r\n","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Teacher\\Pages\\ViewTeacher.js",["190"],"import React, { useState, useEffect } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { BiEdit } from \"react-icons/bi\";\r\n\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport UpdateTeacher from \"../Components/UpdateTeacher\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  GridStyle: {\r\n    margin: \" 0px 45px 0px 23px\",\r\n  },\r\n  root: {\r\n    height: \"100vh\",\r\n    overflowY: \"auto\",\r\n    backgroundColor: \"#d3d3d3\",\r\n  },\r\n  paperStyle: {\r\n    width: \"100%\",\r\n    padding: 20,\r\n    backgroundColor: \"#2E1B4B\",\r\n    margin: \"80px auto\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      paddingBottom: \"50px\",\r\n    },\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  InterviewFields: {\r\n    marginTop: 7,\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(1),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  submit: {\r\n    textAlign: \"center\",\r\n    backgroundColor:\"#2E1B4B\",\r\n    marginTop: 10,\r\n  },\r\n  mainHeadTypo: {\r\n    color: theme.palette.primary.main,\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nconst ViewTeacher = (props) => {\r\n  const [disableField, setDisableField] = useState(true);\r\n\r\n  const EnableFieldsHandler = () => {\r\n    setDisableField(false);\r\n  };\r\n  const DisableFieldsHandler = () => {\r\n    setDisableField(true);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n   <>\r\n      <Dialog open={props.open} fullWidth maxWidth=\"sm\" >\r\n        <DialogTitle disableTypography style={{   backgroundColor:\"#2E1B4B\"}}>\r\n          <Typography variant=\"h4\" align=\"center\" className={classes.mainHeadTypo} >\r\n           Edit Teacher\r\n          </Typography>\r\n\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <ListAltIcon />\r\n            </Avatar>\r\n          </div>\r\n        </DialogTitle>\r\n        <DialogContent dividers style={{   backgroundColor:\"#2E1B4B\"}}>\r\n          <div className={classes.demo}>\r\n          <UpdateTeacher\r\n            tchId={props.tchId}\r\n            disableField={disableField}\r\n            DisableFieldsHandler={DisableFieldsHandler}\r\n            teachers = {props.teachers}\r\n            setTeacher = {props.setTeacher}\r\n          />\r\n          </div>\r\n          <Grid className={classes.submit}>\r\n            {disableField && (\r\n              <Button\r\n                onClick={EnableFieldsHandler}\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                size=\"medium\"\r\n                startIcon={<BiEdit style={{ marginLeft: 6 }} />}\r\n              >\r\n                Edit Details\r\n              </Button>\r\n            )}\r\n        \r\n          </Grid>\r\n        </DialogContent>\r\n       \r\n        <DialogActions style={{   backgroundColor:\"#2E1B4B\"}}>\r\n          <Button autoFocus onClick={props.handleCloseDialog} color=\"primary\">\r\n            CANCEL\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n  </>\r\n  );\r\n};\r\n\r\nexport default ViewTeacher;\r\n","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Teacher\\Components\\DeleteTeacher.js",["191"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialogTitle: {\r\n    variant: \"h6\",\r\n    color: theme.palette.primary.main,\r\n  },\r\n  demo: {\r\n    variant: \"h6\",\r\n    color: \"#fff\",\r\n    fontFamily: \"Montserrat, sans-serif\"\r\n  },\r\n \r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"down\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\nexport default function DeleteTeacher (props) {\r\n  const classes = useStyles();\r\n  \r\n\r\n  const CloseDeleteDialogHandler = () => {\r\n    props.setOpenDeleteDialog(false);\r\n  };\r\n\r\n  const confirmDeleteHandler =  () => {\r\n     \r\n    props.setTeacher(props.teachers.filter(tch => tch.id != props.tchId));\r\n   \r\n  };\r\n  \r\n  return (\r\n    <>\r\n     \r\n\r\n      <Dialog\r\n        onClose={CloseDeleteDialogHandler}\r\n        open={props.OpenDeleteDialog}\r\n        fullWidth\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        maxWidth=\"sm\"\r\n      > \r\n\r\n        <DialogTitle\r\n          onClose={CloseDeleteDialogHandler}\r\n          className={classes.dialogTitle}\r\n          style={{   backgroundColor:\"#2E1B4B\"}}\r\n        >\r\n          Delete Teacher Confirmation\r\n        </DialogTitle>\r\n<Divider light variant=\"middle\"/>\r\n        <DialogContent dividers style={{   backgroundColor:\"#2E1B4B\"}}>\r\n          <div className={classes.demo}>\r\n            Are you sure you want to delete this Teacher?\r\n          </div>\r\n        </DialogContent>\r\n      \r\n        <DialogActions style={{   backgroundColor:\"#2E1B4B\"}}>\r\n         \r\n        \r\n          <Button\r\n            onClick={confirmDeleteHandler}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n          >\r\n            Yes\r\n          </Button>\r\n          <Button\r\n            onClick={CloseDeleteDialogHandler}\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\n","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Student\\Components\\DeleteStudent.js",["192"],"import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n//firebase\r\nimport firebase from '../../shared/backend'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dialogTitle: {\r\n    variant: \"h6\",\r\n    color: theme.palette.primary.main,\r\n  },\r\n  demo: {\r\n    variant: \"h6\",\r\n    color: \"#fff\",\r\n    fontFamily: \"Montserrat, sans-serif\"\r\n  },\r\n\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"down\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\nexport default function DeleteStudent(props) {\r\n  const classes = useStyles();\r\n\r\n\r\n  const CloseDeleteDialogHandler = () => {\r\n    props.setOpenDeleteDialog(false);\r\n  };\r\n\r\n  const confirmDeleteHandler = () => {\r\n    const std = props.students[props.stdId]\r\n    firebase.database().ref('Student/' + props.stdId).remove()\r\n  };\r\n\r\n  return (\r\n    <>\r\n\r\n\r\n      <Dialog\r\n        onClose={CloseDeleteDialogHandler}\r\n        open={props.OpenDeleteDialog}\r\n        fullWidth\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        maxWidth=\"sm\"\r\n      >\r\n\r\n        <DialogTitle\r\n          onClose={CloseDeleteDialogHandler}\r\n          className={classes.dialogTitle}\r\n          style={{ backgroundColor: \"#2E1B4B\" }}\r\n        >\r\n          Delete Student Confirmation\r\n        </DialogTitle>\r\n        <Divider light variant=\"middle\" />\r\n        <DialogContent dividers style={{ backgroundColor: \"#2E1B4B\" }}>\r\n          <div className={classes.demo}>\r\n            Are you sure you want to delete this Student?\r\n          </div>\r\n        </DialogContent>\r\n\r\n        <DialogActions style={{ backgroundColor: \"#2E1B4B\" }}>\r\n\r\n\r\n          <Button\r\n            onClick={confirmDeleteHandler}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n          >\r\n            Yes\r\n          </Button>\r\n          <Button\r\n            onClick={CloseDeleteDialogHandler}\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\n","C:\\Users\\Sabih Imran\\Desktop\\Runn Code\\Code\\WebPortal old 1\\WebPortal\\src\\Teacher\\Components\\UpdateTeacher.js",["193"],"import React, { useEffect, useState } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { BiSave } from \"react-icons/bi\";\r\nimport students from \"../../shared/Components/studentsArray\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  GridStyle: {\r\n    margin: \" 0px 45px 0px 23px\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n  InterviewFields: {\r\n    marginTop: 7,\r\n  },\r\n  submit: {\r\n    textAlign: \"center\",\r\n\r\n    marginTop: 10,\r\n  },\r\n}));\r\n\r\nconst validationSchema = yup.object().shape({\r\n    name: yup\r\n    .string()\r\n    .required(\"This field is required\")\r\n    .matches(/^[A-Za-z ]*$/, \"Please enter valid name (Alphabets Only)\")\r\n    .min(3, \"First Name must be atleast 3 characters\"),\r\n\r\n  qualification: yup\r\n    .string()\r\n    .required(\"This field is required\")\r\n    .matches(/^[A-Za-z ]*$/, \"Please enter Program name (Alphabets Only)\")\r\n    .min(3, \"Last Name must be atleast 3 characters\"),\r\n\r\n  email: yup.string()\r\n    .required(\"This field is required\")\r\n    .email(\"Please enter valid email\"),\r\n\r\n  password: yup\r\n    .string()\r\n    .required(\"This field is required\")\r\n    .min(6, \"Password must be atleast 6 characters long\"),\r\n\r\n  \r\n});\r\n\r\nconst UpdateTeacher = (props) => {\r\n  const teacherId = props.tchId;\r\n  const classes = useStyles();\r\n\r\n  const [arr, setArr] = useState(props.teachers);\r\n  // const [reRender, setReRender] = useState(false);\r\n\r\n  // useEffect(()=>{\r\n  //  console.log(\"hello\")\r\n  // }, [reRender])\r\n\r\n  useEffect(() => {\r\n    console.log(\"rerender\");\r\n  }, [props.teachers]);\r\n\r\n  const initialValues = {\r\n    name: props.teachers[teacherId].name,\r\n    qualification: props.teachers[teacherId].qualification,\r\n    email: props.teachers[teacherId].email,\r\n    password: props.teachers[teacherId].password,\r\n  };\r\n\r\n  const onSubmitHandler = (values) => {\r\n    var dummyItem = arr[teacherId];\r\n    dummyItem.name = values.name;\r\n    dummyItem.qualification = values.qualification;\r\n    dummyItem.email = values.email;\r\n    dummyItem.password = values.password;\r\n\r\n    let dummyArr = arr;\r\n    dummyArr[teacherId] = dummyItem;\r\n    setArr(dummyArr);\r\n\r\n    console.log(arr[teacherId]);\r\n    //    setReRender(!reRender)\r\n\r\n    props.DisableFieldsHandler();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={onSubmitHandler}\r\n      >\r\n        {(fProps) => (\r\n          <Form>\r\n            <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n                            <Field\r\n                                as={TextField}\r\n                                autoComplete=\"name\"\r\n                                name=\"name\"\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                size = \"small\"\r\n                                id=\"name\"\r\n                                label=\"Name\"\r\n                                autoFocus\r\n                                helperText={\r\n                                    <ErrorMessage\r\n                                        name=\"name\"\r\n                                        style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                                    />\r\n                                }\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Field\r\n                                as={TextField}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                size = \"small\"\r\n                                id=\"qualification\"\r\n                                label=\"Qualification\"\r\n                                name=\"qualification\"\r\n                                autoComplete=\"qualification\"\r\n\r\n                                helperText={\r\n                                    <ErrorMessage\r\n                                        name=\"qualification\"\r\n                                        style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                                    />\r\n                                }\r\n                            />\r\n                        </Grid>\r\n                \r\n                        <Grid item xs={12} sm={6}>\r\n                            <Field\r\n                                as={TextField}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                size = \"small\"\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                                helperText={\r\n                                    <ErrorMessage\r\n                                        name=\"email\"\r\n                                        style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                                    />\r\n                                }\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={6}>\r\n                        <Field\r\n                                as={TextField}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                size = \"small\"\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                helperText={\r\n                                    <ErrorMessage\r\n                                        name=\"password\"\r\n                                        style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                                    />\r\n                                }\r\n                            />\r\n                      \r\n                        </Grid>\r\n\r\n            </Grid>\r\n\r\n            <Grid className={classes.submit}>\r\n              {!props.disableField && (\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  size=\"medium\"\r\n                  disabled={!(fProps.isValid || fProps.isSubmitting)}\r\n                  startIcon={<BiSave style={{ marginLeft: 6 }} />}\r\n                >\r\n                  Save Changes\r\n                </Button>\r\n              )}\r\n            </Grid>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\nexport default UpdateTeacher;\r\n",{"ruleId":"194","severity":1,"message":"195","line":9,"column":8,"nodeType":"196","messageId":"197","endLine":9,"endColumn":19},{"ruleId":"194","severity":1,"message":"198","line":6,"column":10,"nodeType":"196","messageId":"197","endLine":6,"endColumn":20},{"ruleId":"194","severity":1,"message":"199","line":9,"column":8,"nodeType":"196","messageId":"197","endLine":9,"endColumn":16},{"ruleId":"194","severity":1,"message":"200","line":12,"column":10,"nodeType":"196","messageId":"197","endLine":12,"endColumn":16},{"ruleId":"194","severity":1,"message":"201","line":1,"column":27,"nodeType":"196","messageId":"197","endLine":1,"endColumn":36},{"ruleId":"194","severity":1,"message":"202","line":8,"column":10,"nodeType":"196","messageId":"197","endLine":8,"endColumn":19},{"ruleId":"194","severity":1,"message":"203","line":7,"column":8,"nodeType":"196","messageId":"197","endLine":7,"endColumn":16},{"ruleId":"204","severity":1,"message":"205","line":49,"column":26,"nodeType":"206","messageId":"207","endLine":49,"endColumn":28},{"ruleId":"194","severity":1,"message":"208","line":1,"column":17,"nodeType":"196","messageId":"197","endLine":1,"endColumn":25},{"ruleId":"194","severity":1,"message":"209","line":4,"column":8,"nodeType":"196","messageId":"197","endLine":4,"endColumn":12},{"ruleId":"194","severity":1,"message":"210","line":5,"column":8,"nodeType":"196","messageId":"197","endLine":5,"endColumn":12},{"ruleId":"194","severity":1,"message":"211","line":36,"column":11,"nodeType":"196","messageId":"197","endLine":36,"endColumn":16},{"ruleId":"194","severity":1,"message":"212","line":37,"column":11,"nodeType":"196","messageId":"197","endLine":37,"endColumn":19},{"ruleId":"194","severity":1,"message":"213","line":55,"column":9,"nodeType":"196","messageId":"197","endLine":55,"endColumn":17},{"ruleId":"204","severity":1,"message":"214","line":56,"column":20,"nodeType":"206","messageId":"207","endLine":56,"endColumn":22},{"ruleId":"215","severity":1,"message":"216","line":112,"column":97,"nodeType":"217","messageId":"218","endLine":112,"endColumn":122},{"ruleId":"215","severity":1,"message":"216","line":180,"column":97,"nodeType":"217","messageId":"218","endLine":180,"endColumn":124},{"ruleId":"194","severity":1,"message":"219","line":35,"column":9,"nodeType":"196","messageId":"197","endLine":35,"endColumn":19},{"ruleId":"194","severity":1,"message":"199","line":9,"column":8,"nodeType":"196","messageId":"197","endLine":9,"endColumn":16},{"ruleId":"194","severity":1,"message":"220","line":60,"column":10,"nodeType":"196","messageId":"197","endLine":60,"endColumn":13},{"ruleId":"194","severity":1,"message":"221","line":60,"column":15,"nodeType":"196","messageId":"197","endLine":60,"endColumn":21},{"ruleId":"194","severity":1,"message":"222","line":70,"column":16,"nodeType":"196","messageId":"197","endLine":70,"endColumn":23},{"ruleId":"194","severity":1,"message":"219","line":33,"column":9,"nodeType":"196","messageId":"197","endLine":33,"endColumn":19},{"ruleId":"194","severity":1,"message":"223","line":1,"column":10,"nodeType":"196","messageId":"197","endLine":1,"endColumn":15},{"ruleId":"194","severity":1,"message":"224","line":16,"column":9,"nodeType":"196","messageId":"197","endLine":16,"endColumn":16},{"ruleId":"194","severity":1,"message":"219","line":32,"column":9,"nodeType":"196","messageId":"197","endLine":32,"endColumn":19},{"ruleId":"204","severity":1,"message":"214","line":54,"column":26,"nodeType":"206","messageId":"207","endLine":54,"endColumn":28},{"ruleId":"194","severity":1,"message":"209","line":5,"column":9,"nodeType":"196","messageId":"197","endLine":5,"endColumn":13},{"ruleId":"194","severity":1,"message":"209","line":5,"column":10,"nodeType":"196","messageId":"197","endLine":5,"endColumn":14},{"ruleId":"194","severity":1,"message":"200","line":22,"column":10,"nodeType":"196","messageId":"197","endLine":22,"endColumn":16},{"ruleId":"204","severity":1,"message":"205","line":90,"column":26,"nodeType":"206","messageId":"207","endLine":90,"endColumn":28},{"ruleId":"194","severity":1,"message":"201","line":1,"column":27,"nodeType":"196","messageId":"197","endLine":1,"endColumn":36},{"ruleId":"204","severity":1,"message":"205","line":40,"column":58,"nodeType":"206","messageId":"207","endLine":40,"endColumn":60},{"ruleId":"194","severity":1,"message":"225","line":40,"column":11,"nodeType":"196","messageId":"197","endLine":40,"endColumn":14},{"ruleId":"194","severity":1,"message":"199","line":9,"column":8,"nodeType":"196","messageId":"197","endLine":9,"endColumn":16},"no-unused-vars","'ViewStudent' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'students' is defined but never used.","'object' is defined but never used.","'useEffect' is defined but never used.","'useParams' is defined but never used.","'subjects' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useState' is defined but never used.","'Link' is defined but never used.","'Grid' is defined but never used.","'email' is assigned a value but never used.","'password' is assigned a value but never used.","'onChange' is assigned a value but never used.","Expected '===' and instead saw '=='.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'paperStyle' is assigned a value but never used.","'arr' is assigned a value but never used.","'setArr' is assigned a value but never used.","'setUser' is assigned a value but never used.","'Paper' is defined but never used.","'classes' is assigned a value but never used.","'std' is assigned a value but never used."]