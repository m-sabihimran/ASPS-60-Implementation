{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sabih Imran\\\\Desktop\\\\Runn Code\\\\Code\\\\WebPortal old 1\\\\WebPortal\\\\src\\\\Student\\\\Components\\\\UpdateStudent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as yup from \"yup\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { BiSave } from \"react-icons/bi\";\nimport students from \"../../shared/Components/studentsArray\"; //import firebase \n\nimport firebase from '../../shared/backend';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  GridStyle: {\n    margin: \" 0px 45px 0px 23px\",\n    [theme.breakpoints.down(\"xs\")]: {\n      marginLeft: 0\n    }\n  },\n  submit: {\n    textAlign: \"center\",\n    marginTop: 10\n  }\n}));\nconst validationSchema = yup.object().shape({\n  name: yup.string().required(\"This field is required\").matches(/^[A-Za-z ]*$/, \"Please enter valid name (Alphabets Only)\").min(3, \"First Name must be atleast 3 characters\"),\n  program: yup.string().required(\"This field is required\").matches(/^[A-Za-z ]*$/, \"Please enter Program name (Alphabets Only)\").min(3, \"Last Name must be atleast 3 characters\"),\n  email: yup.string().required(\"This field is required\").email(\"Please enter valid email\"),\n  password: yup.string().required(\"This field is required\").min(6, \"Password must be atleast 6 characters long\"),\n  semester: yup.string().required(\"This field is required\"),\n  profileLink: yup.string().required(\"This field is required\")\n});\n\nconst UpdateStudent = props => {\n  _s();\n\n  const studentId = props.stdId;\n  const classes = useStyles();\n  const [arr, setArr] = useState(props.students); // const [reRender, setReRender] = useState(false);\n  // useEffect(()=>{\n  //  console.log(\"hello\")\n  // }, [reRender])\n\n  useEffect(() => {}, []);\n  const [user, setUser] = useState(props.students[studentId]);\n  const initialValues = {\n    name: props.students[studentId].name,\n    program: props.students[studentId].program,\n    email: props.students[studentId].email,\n    password: props.students[studentId].password,\n    semester: props.students[studentId].semester,\n    profileLink: props.students[studentId].profileLink\n  };\n\n  const onSubmitHandler = values => {\n    try {\n      firebase.auth().signInWithEmailAndPassword(String(user.email), String(user.password)).then(function (userCredential) {\n        userCredential.user.updateEmail(values.email);\n      }).then(res => {\n        firebase.database().ref('Student/' + user.id + '/').update({\n          email: values.email\n        });\n      });\n    } catch (err) {\n      alert('Please retry');\n    }\n\n    props.DisableFieldsHandler();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: onSubmitHandler,\n      children: fProps => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Field, {\n              as: TextField,\n              inputProps: {\n                readOnly: true\n              },\n              variant: \"standard\",\n              margin: \"normal\",\n              fullWidth: true,\n              id: \"name\",\n              label: \"Name\",\n              name: \"name\",\n              helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"name\",\n                style: {\n                  color: \"red\",\n                  fontWeight: \"bold\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Field, {\n              as: TextField,\n              inputProps: {\n                readOnly: true\n              },\n              id: \"program\",\n              multiline: true,\n              variant: \"standard\",\n              margin: \"normal\",\n              fullWidth: true,\n              name: \"program\",\n              label: \"Program\",\n              helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"program\",\n                style: {\n                  color: \"red\",\n                  fontWeight: \"bold\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Field, {\n              as: TextField,\n              inputProps: {\n                readOnly: props.disableField\n              },\n              variant: \"standard\",\n              margin: \"normal\",\n              fullWidth: true,\n              id: \"email\",\n              label: \"Email\",\n              name: \"email\",\n              helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"email\",\n                style: {\n                  color: \"red\",\n                  fontWeight: \"bold\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Field, {\n              as: TextField,\n              inputProps: {\n                readOnly: true\n              },\n              id: \"password\",\n              multiline: true,\n              variant: \"standard\",\n              margin: \"normal\",\n              fullWidth: true,\n              name: \"password\",\n              label: \"Password\",\n              helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"password\",\n                style: {\n                  color: \"red\",\n                  fontWeight: \"bold\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Field, {\n              as: TextField,\n              variant: \"standard\",\n              margin: \"normal\",\n              fullWidth: true,\n              id: \"semester\",\n              label: \"Semester\",\n              name: \"semester\",\n              inputProps: {\n                readOnly: true\n              },\n              helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"semester\",\n                style: {\n                  color: \"red\",\n                  fontWeight: \"bold\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Field, {\n              as: TextField,\n              id: \"profileLink\",\n              multiline: true,\n              variant: \"standard\",\n              margin: \"normal\",\n              fullWidth: true,\n              name: \"profileLink\",\n              inputProps: {\n                readOnly: true\n              },\n              label: \"Profile Link\",\n              helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"profileLink\",\n                style: {\n                  color: \"red\",\n                  fontWeight: \"bold\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          className: classes.submit,\n          children: !props.disableField && /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"secondary\",\n            size: \"medium\",\n            disabled: !(fProps.isValid || fProps.isSubmitting),\n            startIcon: /*#__PURE__*/_jsxDEV(BiSave, {\n              style: {\n                marginLeft: 6\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 30\n            }, this),\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(UpdateStudent, \"msIB5jfkYnaQpkKYpLpMzdNn7pE=\", false, function () {\n  return [useStyles];\n});\n\n_c = UpdateStudent;\nexport default UpdateStudent;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateStudent\");","map":{"version":3,"sources":["C:/Users/Sabih Imran/Desktop/Runn Code/Code/WebPortal old 1/WebPortal/src/Student/Components/UpdateStudent.js"],"names":["React","useEffect","useState","TextField","Formik","Form","Field","ErrorMessage","yup","Grid","makeStyles","Button","BiSave","students","firebase","useStyles","theme","GridStyle","margin","breakpoints","down","marginLeft","submit","textAlign","marginTop","validationSchema","object","shape","name","string","required","matches","min","program","email","password","semester","profileLink","UpdateStudent","props","studentId","stdId","classes","arr","setArr","user","setUser","initialValues","onSubmitHandler","values","auth","signInWithEmailAndPassword","String","then","userCredential","updateEmail","res","database","ref","id","update","err","alert","DisableFieldsHandler","fProps","readOnly","color","fontWeight","disableField","isValid","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { BiSave } from \"react-icons/bi\";\r\nimport students from \"../../shared/Components/studentsArray\";\r\n//import firebase \r\nimport firebase from '../../shared/backend';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  GridStyle: {\r\n    margin: \" 0px 45px 0px 23px\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n  submit: {\r\n    textAlign: \"center\",\r\n\r\n    marginTop: 10,\r\n  },\r\n}));\r\n\r\nconst validationSchema = yup.object().shape({\r\n  name: yup\r\n    .string()\r\n    .required(\"This field is required\")\r\n    .matches(/^[A-Za-z ]*$/, \"Please enter valid name (Alphabets Only)\")\r\n    .min(3, \"First Name must be atleast 3 characters\"),\r\n\r\n  program: yup\r\n    .string()\r\n    .required(\"This field is required\")\r\n    .matches(/^[A-Za-z ]*$/, \"Please enter Program name (Alphabets Only)\")\r\n    .min(3, \"Last Name must be atleast 3 characters\"),\r\n\r\n  email: yup\r\n    .string()\r\n    .required(\"This field is required\")\r\n    .email(\"Please enter valid email\"),\r\n\r\n  password: yup\r\n    .string()\r\n    .required(\"This field is required\")\r\n    .min(6, \"Password must be atleast 6 characters long\"),\r\n\r\n  semester: yup.string().required(\"This field is required\"),\r\n\r\n  profileLink: yup.string().required(\"This field is required\"),\r\n});\r\n\r\nconst UpdateStudent = (props) => {\r\n  const studentId = props.stdId;\r\n  const classes = useStyles();\r\n\r\n  const [arr, setArr] = useState(props.students);\r\n  // const [reRender, setReRender] = useState(false);\r\n\r\n  // useEffect(()=>{\r\n  //  console.log(\"hello\")\r\n  // }, [reRender])\r\n\r\n  useEffect(() => {\r\n\r\n  }, []);\r\n  const [user, setUser] = useState(props.students[studentId])\r\n  const initialValues = {\r\n    name: props.students[studentId].name,\r\n    program: props.students[studentId].program,\r\n    email: props.students[studentId].email,\r\n    password: props.students[studentId].password,\r\n    semester: props.students[studentId].semester,\r\n    profileLink: props.students[studentId].profileLink,\r\n  };\r\n\r\n  const onSubmitHandler = (values) => {\r\n    try {\r\n      firebase.auth().signInWithEmailAndPassword(String(user.email), String(user.password)).then(\r\n        function (userCredential) {\r\n          userCredential.user.updateEmail(values.email);\r\n        }).then(res => {\r\n          firebase.database().ref('Student/' + user.id+'/').update({ email: values.email })\r\n        })\r\n        \r\n    } catch (err) {\r\n      alert('Please retry')\r\n    }\r\n    props.DisableFieldsHandler();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={onSubmitHandler}\r\n      >\r\n        {(fProps) => (\r\n          <Form>\r\n            <Grid container spacing={2}>\r\n              <Grid item={true} xs={12} sm={6}>\r\n                <Field\r\n                  as={TextField}\r\n                  inputProps={{ readOnly: true }}\r\n                  variant=\"standard\"\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  id=\"name\"\r\n                  label=\"Name\"\r\n                  name=\"name\"\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"name\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item={true} xs={12} sm={6}>\r\n                <Field\r\n                  as={TextField}\r\n                  inputProps={{ readOnly: true }}\r\n                  id=\"program\"\r\n                  multiline\r\n                  variant=\"standard\"\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  name=\"program\"\r\n                  label=\"Program\"\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"program\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item={true} xs={12} sm={6}>\r\n                <Field\r\n                  as={TextField}\r\n                  inputProps={{ readOnly: props.disableField }}\r\n                  variant=\"standard\"\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"email\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item={true} xs={12} sm={6}>\r\n                <Field\r\n                  as={TextField}\r\n                  inputProps={{ readOnly: true }}\r\n                  id=\"password\"\r\n                  multiline\r\n                  variant=\"standard\"\r\n                  margin=\"normal\"\r\n\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"password\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item={true} xs={12} sm={6}>\r\n                <Field\r\n                  as={TextField}\r\n                  variant=\"standard\"\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  id=\"semester\"\r\n                  label=\"Semester\"\r\n                  name=\"semester\"\r\n                  inputProps={{ readOnly: true }}\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"semester\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item={true} xs={12} sm={6}>\r\n                <Field\r\n                  as={TextField}\r\n                  id=\"profileLink\"\r\n                  multiline\r\n                  variant=\"standard\"\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  name=\"profileLink\"\r\n                  inputProps={{ readOnly: true }}\r\n                  label=\"Profile Link\"\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"profileLink\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid className={classes.submit}>\r\n              {!props.disableField && (\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  size=\"medium\"\r\n                  disabled={!(fProps.isValid || fProps.isSubmitting)}\r\n                  startIcon={<BiSave style={{ marginLeft: 6 }} />}\r\n                >\r\n                  Save Changes\r\n                </Button>\r\n              )}\r\n            </Grid>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\nexport default UpdateStudent;\r\n"]},"metadata":{},"sourceType":"module"}