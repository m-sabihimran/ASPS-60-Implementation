{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sabih Imran\\\\Desktop\\\\Runn Code\\\\Code\\\\WebPortal old 1\\\\WebPortal\\\\src\\\\Teacher\\\\Components\\\\UpdateTeacher.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as yup from \"yup\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { BiSave } from \"react-icons/bi\";\nimport students from \"../../shared/Components/studentsArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  GridStyle: {\n    margin: \" 0px 45px 0px 23px\",\n    [theme.breakpoints.down(\"xs\")]: {\n      marginLeft: 0\n    }\n  },\n  InterviewFields: {\n    marginTop: 7\n  },\n  submit: {\n    textAlign: \"center\",\n    marginTop: 10\n  }\n}));\nconst validationSchema = yup.object().shape({\n  name: yup.string().required(\"This field is required\").matches(/^[A-Za-z ]*$/, \"Please enter valid name (Alphabets Only)\").min(3, \"First Name must be atleast 3 characters\"),\n  qualification: yup.string().required(\"This field is required\").matches(/^[A-Za-z ]*$/, \"Please enter Program name (Alphabets Only)\").min(3, \"Last Name must be atleast 3 characters\"),\n  email: yup.string().required(\"This field is required\").email(\"Please enter valid email\"),\n  password: yup.string().required(\"This field is required\").min(6, \"Password must be atleast 6 characters long\")\n});\n\nconst UpdateTeacher = props => {\n  _s();\n\n  const teacherId = props.tchId;\n  const classes = useStyles();\n  const [arr, setArr] = useState(props.teachers); // const [reRender, setReRender] = useState(false);\n  // useEffect(()=>{\n  //  console.log(\"hello\")\n  // }, [reRender])\n\n  useEffect(() => {\n    console.log(\"rerender\");\n  }, [props.teachers]);\n  const initialValues = {\n    name: props.teachers[teacherId].name,\n    qualification: props.teachers[teacherId].qualification,\n    email: props.teachers[teacherId].email,\n    password: props.teachers[teacherId].password\n  };\n\n  const onSubmitHandler = values => {\n    var dummyItem = arr[teacherId];\n    dummyItem.name = values.name;\n    dummyItem.qualification = values.qualification;\n    dummyItem.email = values.email;\n    dummyItem.password = values.password;\n    let dummyArr = arr;\n    dummyArr[teacherId] = dummyItem;\n    setArr(dummyArr);\n    console.log(arr[teacherId]); //    setReRender(!reRender)\n\n    props.DisableFieldsHandler();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: onSubmitHandler,\n      children: fProps => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Field, {\n              as: TextField,\n              autoComplete: \"name\",\n              name: \"name\",\n              variant: \"standard\",\n              fullWidth: true,\n              size: \"small\",\n              id: \"name\",\n              label: \"Name\",\n              autoFocus: true,\n              helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"name\",\n                style: {\n                  color: \"red\",\n                  fontWeight: \"bold\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Field, {\n              as: TextField,\n              variant: \"standard\",\n              fullWidth: true,\n              size: \"small\",\n              id: \"qualification\",\n              label: \"Qualification\",\n              name: \"qualification\",\n              autoComplete: \"qualification\",\n              helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"qualification\",\n                style: {\n                  color: \"red\",\n                  fontWeight: \"bold\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Field, {\n              as: TextField,\n              variant: \"standard\",\n              fullWidth: true,\n              size: \"small\",\n              id: \"email\",\n              label: \"Email Address\",\n              name: \"email\",\n              autoComplete: \"email\",\n              helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"email\",\n                style: {\n                  color: \"red\",\n                  fontWeight: \"bold\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Field, {\n              as: TextField,\n              variant: \"standard\",\n              fullWidth: true,\n              size: \"small\",\n              name: \"password\",\n              label: \"Password\",\n              type: \"password\",\n              id: \"password\",\n              autoComplete: \"current-password\",\n              helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"password\",\n                style: {\n                  color: \"red\",\n                  fontWeight: \"bold\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          className: classes.submit,\n          children: !props.disableField && /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"secondary\",\n            size: \"medium\",\n            disabled: !(fProps.isValid || fProps.isSubmitting),\n            startIcon: /*#__PURE__*/_jsxDEV(BiSave, {\n              style: {\n                marginLeft: 6\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 30\n            }, this),\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(UpdateTeacher, \"J8jvKTVSDkO42zaf9qDDJ7f4Gmc=\", false, function () {\n  return [useStyles];\n});\n\n_c = UpdateTeacher;\nexport default UpdateTeacher;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateTeacher\");","map":{"version":3,"sources":["C:/Users/Sabih Imran/Desktop/Runn Code/Code/WebPortal old 1/WebPortal/src/Teacher/Components/UpdateTeacher.js"],"names":["React","useEffect","useState","TextField","Formik","Form","Field","ErrorMessage","yup","Grid","makeStyles","Button","BiSave","students","useStyles","theme","GridStyle","margin","breakpoints","down","marginLeft","InterviewFields","marginTop","submit","textAlign","validationSchema","object","shape","name","string","required","matches","min","qualification","email","password","UpdateTeacher","props","teacherId","tchId","classes","arr","setArr","teachers","console","log","initialValues","onSubmitHandler","values","dummyItem","dummyArr","DisableFieldsHandler","fProps","color","fontWeight","disableField","isValid","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { BiSave } from \"react-icons/bi\";\r\nimport students from \"../../shared/Components/studentsArray\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  GridStyle: {\r\n    margin: \" 0px 45px 0px 23px\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n  InterviewFields: {\r\n    marginTop: 7,\r\n  },\r\n  submit: {\r\n    textAlign: \"center\",\r\n\r\n    marginTop: 10,\r\n  },\r\n}));\r\n\r\nconst validationSchema = yup.object().shape({\r\n    name: yup\r\n    .string()\r\n    .required(\"This field is required\")\r\n    .matches(/^[A-Za-z ]*$/, \"Please enter valid name (Alphabets Only)\")\r\n    .min(3, \"First Name must be atleast 3 characters\"),\r\n\r\n  qualification: yup\r\n    .string()\r\n    .required(\"This field is required\")\r\n    .matches(/^[A-Za-z ]*$/, \"Please enter Program name (Alphabets Only)\")\r\n    .min(3, \"Last Name must be atleast 3 characters\"),\r\n\r\n  email: yup.string()\r\n    .required(\"This field is required\")\r\n    .email(\"Please enter valid email\"),\r\n\r\n  password: yup\r\n    .string()\r\n    .required(\"This field is required\")\r\n    .min(6, \"Password must be atleast 6 characters long\"),\r\n\r\n  \r\n});\r\n\r\nconst UpdateTeacher = (props) => {\r\n  const teacherId = props.tchId;\r\n  const classes = useStyles();\r\n\r\n  const [arr, setArr] = useState(props.teachers);\r\n  // const [reRender, setReRender] = useState(false);\r\n\r\n  // useEffect(()=>{\r\n  //  console.log(\"hello\")\r\n  // }, [reRender])\r\n\r\n  useEffect(() => {\r\n    console.log(\"rerender\");\r\n  }, [props.teachers]);\r\n\r\n  const initialValues = {\r\n    name: props.teachers[teacherId].name,\r\n    qualification: props.teachers[teacherId].qualification,\r\n    email: props.teachers[teacherId].email,\r\n    password: props.teachers[teacherId].password,\r\n  };\r\n\r\n  const onSubmitHandler = (values) => {\r\n    var dummyItem = arr[teacherId];\r\n    dummyItem.name = values.name;\r\n    dummyItem.qualification = values.qualification;\r\n    dummyItem.email = values.email;\r\n    dummyItem.password = values.password;\r\n\r\n    let dummyArr = arr;\r\n    dummyArr[teacherId] = dummyItem;\r\n    setArr(dummyArr);\r\n\r\n    console.log(arr[teacherId]);\r\n    //    setReRender(!reRender)\r\n\r\n    props.DisableFieldsHandler();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={onSubmitHandler}\r\n      >\r\n        {(fProps) => (\r\n          <Form>\r\n            <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n                            <Field\r\n                                as={TextField}\r\n                                autoComplete=\"name\"\r\n                                name=\"name\"\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                size = \"small\"\r\n                                id=\"name\"\r\n                                label=\"Name\"\r\n                                autoFocus\r\n                                helperText={\r\n                                    <ErrorMessage\r\n                                        name=\"name\"\r\n                                        style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                                    />\r\n                                }\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Field\r\n                                as={TextField}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                size = \"small\"\r\n                                id=\"qualification\"\r\n                                label=\"Qualification\"\r\n                                name=\"qualification\"\r\n                                autoComplete=\"qualification\"\r\n\r\n                                helperText={\r\n                                    <ErrorMessage\r\n                                        name=\"qualification\"\r\n                                        style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                                    />\r\n                                }\r\n                            />\r\n                        </Grid>\r\n                \r\n                        <Grid item xs={12} sm={6}>\r\n                            <Field\r\n                                as={TextField}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                size = \"small\"\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                                helperText={\r\n                                    <ErrorMessage\r\n                                        name=\"email\"\r\n                                        style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                                    />\r\n                                }\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={6}>\r\n                        <Field\r\n                                as={TextField}\r\n                                variant=\"standard\"\r\n                                fullWidth\r\n                                size = \"small\"\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                helperText={\r\n                                    <ErrorMessage\r\n                                        name=\"password\"\r\n                                        style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                                    />\r\n                                }\r\n                            />\r\n                      \r\n                        </Grid>\r\n\r\n            </Grid>\r\n\r\n            <Grid className={classes.submit}>\r\n              {!props.disableField && (\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  size=\"medium\"\r\n                  disabled={!(fProps.isValid || fProps.isSubmitting)}\r\n                  startIcon={<BiSave style={{ marginLeft: 6 }} />}\r\n                >\r\n                  Save Changes\r\n                </Button>\r\n              )}\r\n            </Grid>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\nexport default UpdateTeacher;\r\n"]},"metadata":{},"sourceType":"module"}