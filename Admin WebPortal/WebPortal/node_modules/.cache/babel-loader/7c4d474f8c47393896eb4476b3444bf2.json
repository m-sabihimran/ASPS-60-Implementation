{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sabih Imran\\\\Desktop\\\\Runn Code\\\\Code\\\\WebPortal old 1\\\\WebPortal\\\\src\\\\Student\\\\Components\\\\AddStudentForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as yup from \"yup\"; //firebase\n\nimport firebase from '../../shared/backend';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1)\n  },\n  Typography: {\n    fontFamily: theme.typography.fontFamily\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  GridStyle: {\n    margin: \"0px 22px\"\n  },\n  error: {\n    color: \"red\"\n  }\n}));\n\nconst AddStudentForm = props => {\n  _s();\n\n  const classes = useStyles();\n  const validationSchema = yup.object().shape({\n    name: yup.string().required(\"This field is required\").matches(/^[A-Za-z ]*$/, \"Please enter valid name (Alphabets Only)\").min(3, \"First Name must be atleast 3 characters\"),\n    program: yup.string().required(\"This field is required\").matches(/^[A-Za-z ]*$/, \"Please enter Program name (Alphabets Only)\").min(3, \"Last Name must be atleast 3 characters\"),\n    email: yup.string().required(\"This field is required\").email(\"Please enter valid email\"),\n    password: yup.string().required(\"This field is required\").min(6, \"Password must be atleast 6 characters long\"),\n    semester: yup.string().required(\"This field is required\"),\n    profileLink: yup.string().required(\"This field is required\")\n  });\n  ;\n\n  const onSubmitHandler = values => {\n    firebase.auth().createUserWithEmailAndPassword(values.email, values.password).then(res => {\n      firebase.database().ref('Student/' + res.user.uid).set({\n        email: values.email,\n        id: res.user.uid,\n        name: values.name,\n        password: values.password,\n        profileLink: values.profileLink,\n        program: values.program,\n        semester: values.semester,\n        subject: []\n      });\n    }).catch(error => {\n      if (error.code === 'auth/email-already-in-use') {\n        console.log('That email address is already in use!');\n      }\n\n      if (error.code === 'auth/invalid-email') {\n        console.log('That email address is invalid!');\n      }\n\n      console.error(error);\n    });\n    props.setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: props.initialValues,\n      onSubmit: onSubmitHandler,\n      validationSchema: validationSchema,\n      children: fProps => /*#__PURE__*/_jsxDEV(Form, {\n        className: classes.form,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Field, {\n              as: TextField,\n              autoComplete: \"name\",\n              name: \"name\",\n              variant: \"standard\",\n              fullWidth: true,\n              size: \"small\",\n              id: \"name\",\n              label: \"Name\",\n              autoFocus: true,\n              helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"name\",\n                style: {\n                  color: \"red\",\n                  fontWeight: \"bold\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Field, {\n              as: TextField,\n              variant: \"standard\",\n              fullWidth: true,\n              size: \"small\",\n              id: \"program\",\n              label: \"Program\",\n              name: \"program\",\n              autoComplete: \"program\",\n              helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"program\",\n                style: {\n                  color: \"red\",\n                  fontWeight: \"bold\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Field, {\n              as: TextField,\n              variant: \"standard\",\n              fullWidth: true,\n              size: \"small\",\n              id: \"email\",\n              label: \"Email Address\",\n              name: \"email\",\n              autoComplete: \"email\",\n              helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"email\",\n                style: {\n                  color: \"red\",\n                  fontWeight: \"bold\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Field, {\n              as: TextField,\n              variant: \"standard\",\n              fullWidth: true,\n              size: \"small\",\n              name: \"password\",\n              label: \"Password\",\n              type: \"password\",\n              id: \"password\",\n              autoComplete: \"current-password\",\n              helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"password\",\n                style: {\n                  color: \"red\",\n                  fontWeight: \"bold\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Field, {\n              as: TextField,\n              variant: \"standard\",\n              fullWidth: true,\n              size: \"small\",\n              name: \"semester\",\n              label: \"Semester\",\n              id: \"semester\",\n              autoComplete: \"semester\",\n              helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"semester\",\n                style: {\n                  color: \"red\",\n                  fontWeight: \"bold\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Field, {\n              as: TextField,\n              variant: \"standard\",\n              fullWidth: true,\n              size: \"small\",\n              name: \"profileLink\",\n              label: \"Profile Link\",\n              id: \"profileLink\",\n              helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"profileLink\",\n                style: {\n                  color: \"red\",\n                  fontWeight: \"bold\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"secondary\",\n            className: classes.submit,\n            disabled: !(fProps.isValid || fProps.isSubmitting),\n            children: \"Add Student\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(AddStudentForm, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = AddStudentForm;\nexport default AddStudentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddStudentForm\");","map":{"version":3,"sources":["C:/Users/Sabih Imran/Desktop/Runn Code/Code/WebPortal old 1/WebPortal/src/Student/Components/AddStudentForm.js"],"names":["React","Button","TextField","makeStyles","Grid","Formik","Form","Field","ErrorMessage","yup","firebase","useStyles","theme","form","width","marginTop","spacing","Typography","fontFamily","typography","submit","margin","GridStyle","error","color","AddStudentForm","props","classes","validationSchema","object","shape","name","string","required","matches","min","program","email","password","semester","profileLink","onSubmitHandler","values","auth","createUserWithEmailAndPassword","then","res","database","ref","user","uid","set","id","subject","catch","code","console","log","setOpen","initialValues","fProps","fontWeight","isValid","isSubmitting"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\n//firebase\r\nimport firebase from '../../shared/backend';\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  Typography: {\r\n    fontFamily: theme.typography.fontFamily,\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  GridStyle: {\r\n    margin: \"0px 22px\",\r\n  },\r\n  error: {\r\n    color: \"red\"\r\n  }\r\n}));\r\n\r\nconst AddStudentForm = (props) => {\r\n\r\n  const classes = useStyles();\r\n  const validationSchema = yup.object().shape({\r\n    name: yup\r\n      .string()\r\n      .required(\"This field is required\")\r\n      .matches(/^[A-Za-z ]*$/, \"Please enter valid name (Alphabets Only)\")\r\n      .min(3, \"First Name must be atleast 3 characters\"),\r\n\r\n    program: yup\r\n      .string()\r\n      .required(\"This field is required\")\r\n      .matches(/^[A-Za-z ]*$/, \"Please enter Program name (Alphabets Only)\")\r\n      .min(3, \"Last Name must be atleast 3 characters\"),\r\n\r\n    email: yup.string()\r\n      .required(\"This field is required\")\r\n      .email(\"Please enter valid email\"),\r\n\r\n    password: yup\r\n      .string()\r\n      .required(\"This field is required\")\r\n      .min(6, \"Password must be atleast 6 characters long\"),\r\n\r\n\r\n    semester: yup\r\n      .string()\r\n      .required(\"This field is required\"),\r\n\r\n    profileLink: yup\r\n      .string()\r\n      .required(\"This field is required\")\r\n  });\r\n  ;\r\n  const onSubmitHandler = (values) => {\r\n    firebase.auth()\r\n      .createUserWithEmailAndPassword(values.email, values.password)\r\n      .then((res) => {\r\n        firebase.database().ref('Student/' + res.user.uid).set({\r\n          email: values.email,\r\n          id: res.user.uid,\r\n          name: values.name,\r\n          password: values.password,\r\n          profileLink: values.profileLink,\r\n          program: values.program,\r\n          semester: values.semester,\r\n          subject: []\r\n        })\r\n      })\r\n      .catch(error => {\r\n        if (error.code === 'auth/email-already-in-use') {\r\n          console.log('That email address is already in use!');\r\n        }\r\n\r\n        if (error.code === 'auth/invalid-email') {\r\n          console.log('That email address is invalid!');\r\n        }\r\n\r\n        console.error(error);\r\n      });\r\n    props.setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={props.initialValues}\r\n        onSubmit={onSubmitHandler}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {(fProps) => (\r\n          <Form className={classes.form}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <Field\r\n                  as={TextField}\r\n                  autoComplete=\"name\"\r\n                  name=\"name\"\r\n                  variant=\"standard\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  id=\"name\"\r\n                  label=\"Name\"\r\n                  autoFocus\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"name\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Field\r\n                  as={TextField}\r\n                  variant=\"standard\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  id=\"program\"\r\n                  label=\"Program\"\r\n                  name=\"program\"\r\n                  autoComplete=\"program\"\r\n\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"program\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6}>\r\n                <Field\r\n                  as={TextField}\r\n                  variant=\"standard\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"email\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6}>\r\n                <Field\r\n                  as={TextField}\r\n                  variant=\"standard\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"password\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6}>\r\n                <Field\r\n                  as={TextField}\r\n                  variant=\"standard\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"semester\"\r\n                  label=\"Semester\"\r\n                  id=\"semester\"\r\n                  autoComplete=\"semester\"\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"semester\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6}>\r\n                <Field\r\n                  as={TextField}\r\n                  variant=\"standard\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"profileLink\"\r\n                  label=\"Profile Link\"\r\n                  id=\"profileLink\"\r\n                  helperText={\r\n                    <ErrorMessage\r\n                      name=\"profileLink\"\r\n                      style={{ color: \"red\", fontWeight: \"bold\" }}\r\n                    />\r\n                  }\r\n                />\r\n              </Grid>\r\n\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes.submit}\r\n                disabled={!(fProps.isValid || fProps.isSubmitting)}\r\n              >\r\n                Add Student\r\n              </Button>\r\n            </Grid>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddStudentForm;\r\n"]},"metadata":{},"sourceType":"module"}